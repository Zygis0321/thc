{"version":3,"sources":["components/styles/playerlist.module.css","components/error-message.tsx","services/country-service.ts","components/player-card.tsx","components/home.tsx","components/navbar.tsx","services/player-service.ts","components/loading-component.tsx","components/search-field.tsx","components/table/helpers.ts","components/table/table-cell-component.tsx","components/table/table-component.tsx","components/table/table-pagination-component.tsx","components/player-table.tsx","data/scorecalc-data.ts","services/date-service.ts","services/tournament-service.ts","services/color-service.ts","components/charts/players-chart.tsx","components/charts/career-chart-wrapper.tsx","components/charts/year-chart-wrapper.tsx","components/player-compare-table.tsx","components/progress.tsx","components/players-autocomplete.tsx","components/rankedplayers-list.tsx","components/ranker.tsx","store/ranker/ranker-actions.ts","store/ranker/ranker-types.ts","App.tsx","store/players/player-actions.ts","store/players/player-types.ts","serviceWorker.ts","store/players/player-reducers.ts","store/ranker/ranker-reducers.ts","store/combineReducers.ts","store/index.ts","store/createStore.ts","index.tsx"],"names":["module","exports","Alert","props","elevation","variant","ErrorMessage","Snackbar","open","show","severity","getCountry","nation","ret","countryCodes","find","country","fifa","undefined","name","alpha2code","a2","PlayerDetail","Typography","align","style","float","bold","value","color","text","PlayerContent","CardContent","homePage","paddingBottom","display","marginBottom","withFlag","alignSelf","marginRight","width","objectFit","boxShadow","borderRadius","alt","player","title","code","toLowerCase","margin","IconButton","ArrowForward","fontSize","club","rank","toString","points","PlayerSkeleton","Skeleton","height","PlayerHomeCard","history","useHistory","Card","CardActionArea","onClick","playerId","id","push","PlayerCard","isMobile","useMediaQuery","maxWidth","playersCompare","useSelector","state","ranker","className","marginLeft","justifyContent","alignItems","flexDirection","CardActions","Button","size","href","target","disabled","some","pathname","addPlayer","flex","Home","useState","playerCount","setPlayerCount","players","slice","Whatshot","WebkitTextStroke","WebkitTextStrokeColor","gridGap","gridTemplateColumns","length","map","count","skeletons","i","getSkeletons","textAlign","navBarItemStyle","buttonSelectedStyle","backgroundColor","navList","url","isActive","match","location","split","NavBar","children","opened","setOpened","toggleDrawer","trigger","useScrollTrigger","Drawer","anchor","onClose","zIndex","position","src","left","bottom","Divider","List","item","ListItem","component","to","exact","activeStyle","button","ListItemText","primary","Slide","appear","direction","in","AppBar","Toolbar","paddingLeft","paddingRight","edge","cursor","Box","pl","pr","pt","overflow","getUniqueValues","key","Array","from","Set","sort","a","b","playersService","rankPlayers","prefScores","lowestScore","newPoints","Math","max","score","j","newRank","recalc","level","pos","p","valueSum","min","coefficient","maxScore","winnerpoints","round","content","stringArray","ln","Number","el","document","createElement","innerHTML","list","getElementsByClassName","cnt","ind","indexOf","substr","fill","LoadingComponent","isLoading","CircularProgress","SearchField","TextField","label","onChange","e","fullWidth","searchText","onKeyPress","ev","getElementById","blur","InputProps","startAdornment","InputAdornment","Search","endAdornment","Clear","getPaginationProps","locationProps","page","parseInt","rowsPerPage","TableCellComponent","field","type","TableCell","class","padding","marginTop","Link","link","fontWeight","isBold","TableComponent","isTablet","orderBy","setOrderBy","sortDir","setSortDir","pagination","values","TableHead","TableRow","includeSerialNumber","fields","index","hideMobile","hideTablet","sortDirection","TableSortLabel","active","prev","TableBody","fieldName","dir","isMain","TablePaginationComponent","path","useRouteMatch","useParams","useEffect","handleChangePage","getPathWithParams","pathWithParams","replace","event","newPage","TablePagination","rowsPerPageOptions","colSpan","onChangePage","onChangeRowsPerPage","PlayerTable","paginationProps","setSearchText","selectedNations","setSelectedNations","selectedClubs","setSelectedClubs","filteredPlayers","filter","includes","Grid","container","spacing","xs","md","sm","Autocomplete","multiple","blurOnSelect","options","getOptionLabel","option","renderInput","params","filterOptions","createFilterOptions","limit","newValue","Paper","TableContainer","minHeight","Table","stickyHeader","levelList","percentageNormalList","tournamentAge","percentage","percentageExceptionList","exceptionInterval","Date","UTC","currentDate","toUTCDate","year","tournamentsService","addYears","dt","n","dtt","setFullYear","getFullYear","getPointsByDate","tournaments","percentageList","datesToCheck","newDate","date","getTime","best5","best","sum","convertDateToYearString","getDate","getUTCDate","getMonth","toUTCString","convertDateToCareerString","interval","getUTCFullYear","month","getUTCMonth","day","getYearChartData","getCareerChartData","scalePointsByDate","step","startRange","endRange","includeEnd","startTime","endTime","scalePointsByDateYear","scalePointsByDateCareer","offset","getMaxDate","getMinDate","getCareerChartDataArray","careerRange","density","playerPoints","startDate","endDate","dateOffset","dateInterval","playerName","data","pointsNormal","yearToDate","currentYear","getYearChartDataArray","yearRange","mainPlayerStartDate","mainPlayerEndDate","pointsException","getColorByName","red","green","blue","mod","x1","x2","x3","charCodeAt","PlayersChart","mainPlayerColor","getLabel","includeNow","this","series","playerSeries","Slider","sliderRange","onSliderChange","valueLabelDisplay","aria-labelledby","marks","sliderMin","sliderMax","valueLabelFormat","strokeDasharray","dataKey","allowDuplicatedCategory","itemSorter","payload","wrapperStyle","contentStyle","whiteSpace","getPayload","chartData","index2","isAnimationActive","stroke","dot","strokeWidth","reverse","references","ref","x","Component","PlayersCareerChart","handleYearChange","setState","componentDidUpdate","playerPointsArray","prevProps","prevState","getYearRange","end","start","maxYear","PlayersYearChart","PlayerCompareTable","ProgressComponent","comparePlayerPoints","playerUpdating","selectedPlayer","selectedComparePlayers","tabValue","showError","handleValueChange","handlePlayerChange","getPlayerPoints","then","mainPlayerPoints","handlePlayerCompareChange","reason","details","concat","valToAdd","Promise","resolve","reject","$","getJSON","res","catch","always","getPlayerValue","loading","Tabs","centered","indicatorColor","Tab","pointerEvents","getPlayerPointsArray","top","Progress","connect","PlayersAutoComplete","handleSearchChange","dense","handlePlayerToggle","secondary","ListItemSecondaryAction","Checkbox","checked","listItemStyle","mobileListItemStyle","ratingUpStyle","ratingDownStyle","ratingConstantStyle","SortableItem","SortableElement","isTabletOrMobile","onMouseEnter","body","onMouseLeave","SortableList","SortableContainer","paddingTop","ResponsiveListItem","RankedPlayersList","onSortStart","onSortEnd","oldIndex","newIndex","reorder","shouldCancelStart","nearestViewportElement","useWindowAsScrollContainer","lockAxis","pressDelay","helperClass","styles","selected","minWidth","mr","abs","justify","matches","playerRemoved","Remove","RankerComponent","levelName","levelFound","updateRankerState","rankerState","arrayMove","selectedLevel","forceAdd","playerAdded","ajax","items","handleClearAllClick","handleLevelChange","pb","bottomNavVal","FormControl","InputLabel","Select","MenuItem","startIcon","ClearAll","fontFamily","BottomNavigation","showLabels","BottomNavigationAction","icon","GroupAdd","Ranker","dispatch","AppComponent","parseContent","getPlayerScores","updatePlayersState","fixPlayers","Container","displayName","App","playersState","Boolean","window","hostname","initialState","rootReducer","combineReducers","action","store","createStore","reducer","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"2umCACAA,EAAOC,QAAU,CAAC,SAAW,+B,qRCG7B,SAASC,EAAMC,GACX,OAAO,kBAAC,IAAD,eAAUC,UAAW,EAAGC,QAAQ,UAAaF,IAEjD,SAASG,EAAaH,GAEzB,OACI,kBAACI,EAAA,EAAD,CAAUC,KAAML,EAAMM,MAClB,kBAAC,EAAD,CAAOC,SAAS,SAAhB,wB,gICHL,SAASC,EAAWC,GACvB,IAAIC,EAAMC,EAAaC,MAAK,SAAAC,GAAO,OAAIA,EAAQC,OAAOL,KACtD,YAASM,IAANL,EACQ,CACHM,KAAK,YACLC,WAAW,UAGZ,CACHD,KAAMN,EAAIM,KACVC,WAAYP,EAAIQ,I,sBCExB,SAASC,EAAanB,GAClB,OACI,oCACI,kBAACoB,EAAA,EAAD,CAAYC,MAAM,QAAQC,MAAO,CAACC,MAAM,WACpB,IAAfvB,EAAMwB,KAAgB,2BAAIxB,EAAMyB,OAAazB,EAAMyB,OAExD,kBAACL,EAAA,EAAD,CAAYM,MAAM,iBACb1B,EAAM2B,OAMvB,SAASC,EAAc5B,GACnB,OACI,kBAAC6B,EAAA,EAAD,CAAaP,OAAwB,IAAjBtB,EAAM8B,cAAkBf,EAAW,CAACgB,cAAc,IAClE,yBAAKT,MAAO,CAACU,QAAQ,OAAQC,cAA+B,IAAjBjC,EAAM8B,SAAkB,MAAM,SACpE9B,EAAMkC,UAAY,kBAAC,IAAD,CACfZ,MAAO,CAACa,UAAU,SAAUC,YAAY,OAAOC,OAAwB,IAAjBrC,EAAM8B,SAAkB,OAAO,OAAOQ,UAAU,OAAQC,UAAW,mCAAoCC,aAAa,OAC1KC,IAAOjC,EAAWR,EAAM0C,OAAOjC,QAAQO,KACvC2B,MAASnC,EAAWR,EAAM0C,OAAOjC,QAAQO,KACzC4B,KAAMpC,EAAWR,EAAM0C,OAAOjC,QAAQQ,WAAW4B,gBAErD,kBAACzB,EAAA,EAAD,CAAYlB,SAA0B,IAAjBF,EAAM8B,SAAkB,KAAO,KAAMT,MAAM,SAASC,MAAS,CAACwB,OAAO,QAASpB,OAAwB,IAAjB1B,EAAM8B,SAAgB,cAAc,aACzI9B,EAAM0C,OAAO1B,OAEA,IAAjBhB,EAAM8B,UACH,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAcC,SAAS,aAIjB,IAAjBjD,EAAM8B,UACH,oCACI,kBAACX,EAAD,CAAcQ,KAAK,OAAOF,MAAOzB,EAAM0C,OAAOQ,OAC9C,kBAAC/B,EAAD,CAAcQ,KAAK,OAAOF,MAAOzB,EAAM0C,OAAOS,KAAKC,WAAY5B,MAAI,IACnE,kBAACL,EAAD,CAAcQ,KAAK,SAASF,MAAOzB,EAAM0C,OAAOW,OAAOD,WAAY5B,MAAI,IACvE,kBAACL,EAAD,CAAcQ,KAAK,eAAeF,MAAOzB,EAAM0C,OAAOjB,MAAM2B,eAOhF,SAASE,IACL,OACI,kBAACzB,EAAA,EAAD,KACI,yBAAKP,MAAO,CAACU,QAAQ,SACjB,yBAAKV,MAAO,CAACa,UAAU,WAAW,kBAACoB,EAAA,EAAD,CAAUrD,QAAQ,OAAOmC,MAAO,GAAImB,OAAQ,MAC9E,yBAAKlC,MAAO,CAACwB,OAAO,SAAS,kBAACS,EAAA,EAAD,CAAUrD,QAAQ,OAAOmC,MAAM,QAAQmB,OAAQ,MAC5E,yBAAKlC,MAAO,CAACa,UAAU,WAAW,kBAACY,EAAA,EAAD,KAAY,kBAACC,EAAA,EAAD,CAAcC,SAAS,cAQ9E,SAASQ,EAAezD,GAC3B,IAAI0D,EAAUC,cAMd,OACI,kBAACC,EAAA,EAAD,CAAOtC,MAAS,CAACe,MAAM,OAAQmB,OAAO,SAClC,kBAACK,EAAA,EAAD,CAAgBC,QAAS,iBANVC,OACLhD,KADKgD,EAM6B,UAAC/D,EAAM0C,cAAP,aAAC,EAAcsB,KAJ/DN,EAAQO,KAAR,mBAAyBF,WAMIhD,IAAjBf,EAAM0C,OAAuB,kBAACY,EAAD,MAC7B,kBAAC1B,EAAD,CAAec,OAAQ1C,EAAM0C,OAAQR,UAAQ,EAACJ,UAAQ,MAQ3D,SAASoC,EAAWlE,GAC/B,IAAMmE,EAAWC,wBAAc,CAACC,SAAU,MACpCX,EAAUC,cACVW,EAAiBC,aACnB,SAACC,GAAD,OACAA,EAAMC,OAAOH,kBAEjB,OACqB,OAAjBtE,EAAM0C,OACN,kBAACkB,EAAA,EAAD,CAAMc,UAAU,QAAQpD,MAAS,CAAEU,QAAQ,OAAQwB,OAAQ,QAASnB,MAAM,OAAQgC,SAAS,QAASM,WAAW,OAAQvC,YAAY,SAC/H,kBAAChB,EAAA,EAAD,CAAYE,MAAO,CAACwB,OAAO,SAA3B,uBAKJ,kBAACc,EAAA,EAAD,CAAMc,UAAU,QAAQpD,MAAS,CAACU,QAAQ,OAAO4C,eAAe,WAAYC,WAAW,UAAYR,SAAS,QAASM,WAAW,OAAQvC,YAAY,OAAQC,MAAM,SAEtJ,yBAAKf,MAAO,CAACU,QAAQ,OAAQ8C,cAAc,SAAUF,eAAe,gBAAiBvC,MAAM,SACvF,kBAACT,EAAD,CAAec,OAAQ1C,EAAM0C,OAAQR,SAAUiC,IAC/C,kBAACY,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,KAAK,QACLvD,MAAM,UACNwD,KAAI,8DAA4DlF,EAAM0C,OAAOsB,IAC7EmB,OAAS,UAJb,cAQA,kBAACH,EAAA,EAAD,CACIC,KAAK,QACLvD,MAAM,UACN0D,SAAUd,EAAee,MAAK,SAAA3C,GAAM,aAAI,UAAA1C,EAAM0C,cAAN,eAAcsB,MAAKtB,EAAOsB,MAClEF,QAAW,WACPJ,EAAQO,KAAK,CACTqB,SAAU,UACVd,MAAO,CAACe,UAAWvF,EAAM0C,YAPrC,oBAedyB,GAAY,kBAAC,IAAD,CACV7C,MAAO,CAACe,MAAM,QAASmD,KAAK,YAAajD,UAAW,mCAAoCC,aAAa,OACrGC,IAAOjC,EAAWR,EAAM0C,OAAOjC,QAAQO,KACvC2B,MAASnC,EAAWR,EAAM0C,OAAOjC,QAAQO,KACzC4B,KAAMpC,EAAWR,EAAM0C,OAAOjC,QAAQQ,WAAW4B,iBC/H1D,SAAS4C,IAEZ,IAAMtB,EAAWC,wBAAc,CAACC,SAAS,UAFvB,EAGoBqB,mBAAS,GAH7B,mBAGXC,EAHW,KAGEC,EAHF,KAKZC,EAAUtB,aACZ,SAACC,GAAD,OACAA,EAAMqB,QAAQA,QAAQC,MAAM,EAAGH,MAEnC,OACI,oCACI,yBAAKrE,MAAO,CAACU,QAAQ,OAAQ4C,eAAe,WACxC,yBAAKtD,MAAO,CAACa,UAAU,YAAY,kBAAC4D,EAAA,EAAD,CAAU9C,SAAS,QAAQ3B,MAAO,CAAEI,MAAM,cAEzE,kBAACN,EAAA,EAAD,CACIlB,QAAQ,KACRmB,MAAM,SACNC,MAAO,CACHI,MAAM,QACNO,aAAa,OACb+D,iBAAiB,MACjBC,sBAAsB,YAG1B,4CAGZ,yBACI3E,MAAQ6C,EAKR,CACInC,QAAQ,OACRkE,QAAQ,QAPO,CACflE,QAAQ,OACRmE,oBAAqB,uCACrBD,QAAQ,SAQRL,EAAQO,OAAS,EAAIP,EAAQQ,KAAI,SAAA5E,GAAK,OAClC,kBAACgC,EAAD,CAAgBf,OAAQjB,OAjDhD,SAAsB6E,GAElB,IADA,IAAIC,EAAY,GACRC,EAAE,EAAGA,EAAEF,EAAOE,IAClBD,EAAUtC,KAAK,kBAACR,EAAD,OAEnB,OAAO8C,EA6CaE,CAAad,IAGzB,yBAAKrE,MAAO,CAACoF,UAAU,SAAU5D,OAAO,SACpC,kBAACkC,EAAA,EAAD,CACI9E,QAAQ,WACRwB,MAAM,UACNoC,QAAS,WACL8B,EAAeD,EAAY,IAE/BrE,MAAO,CAACe,MAAM,UANlB,e,4HCxDVsE,GAAiC,CACnC7D,OAAO,OACPX,UAAU,UAGRyE,GAAqC,CACvCC,gBAAiB,WAUfC,GAAqB,CACvB,CACI9F,KAAM,OACN+F,IAAK,KAET,CACI/F,KAAM,UACN+F,IAAK,YAET,CACI/F,KAAM,QACN+F,IAAK,cACLC,SAAU,SAACC,EAAYC,GAEnB,MAA8B,UADVA,EAAS5B,SACjB6B,MAAM,KAAK,KAG/B,CACInG,KAAM,SACN+F,IAAK,YAMAK,GAAmB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAE1B3D,EAAUC,cAF8B,EAGhB+B,oBAAS,GAHO,mBAGrC4B,EAHqC,KAG7BC,EAH6B,KAK5C,SAASC,IACLD,GAAWD,GAEf,IAAMG,EAAUC,cAChB,OACI,kBAAC,IAAD,CAAYrD,SAAU,MACjB,SAACF,GAAD,OACD,oCACCA,GAAY,oCACT,kBAACwD,EAAA,EAAD,CAAQC,OAAO,OAAOvH,KAAMiH,EAAQO,QAAS,kBAAML,KAAgBlG,MAAO,CAACwG,OAAO,SAC9E,yBAAKxG,MAAO,CAACyG,SAAS,WAAYjF,OAAO,IACrC,yBAAKT,MAAO,IAAKmB,OAAQ,IAAKwE,IAAI,eAAevF,IAAI,SACrD,kBAACrB,EAAA,EAAD,CAAYlB,QAAQ,KAAMoB,MAAO,CAACyG,SAAS,WAAYE,KAAK,GAAIC,OAAO,IAAvE,cAIJ,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAM9G,MAAO,CAACe,MAAM,UAEZyE,GAAQT,KAAI,SAAAgC,GAAI,OACZ,kBAACC,EAAA,EAAD,CAAUC,UAAW,SAACvI,GAAD,OAAW,kBAAC,IAAD,iBAAaA,EAAb,CAAoBwI,GAAIH,EAAKtB,IAAK0B,MAAkB,MAAXJ,EAAKtB,IAAWC,SAAUqB,EAAKrB,SAAU0B,YAAa9B,OAAyB9C,QAAS,kBAAM0D,KAAgBmB,QAAM,GACzL,kBAACC,EAAA,EAAD,CAAcC,QAASR,EAAKrH,cAQpD,kBAAC8H,EAAA,EAAD,CAAOC,QAAQ,EAAOC,UAAU,OAAOC,IAAKxB,GAE5C,kBAACyB,EAAA,EAAD,CAAQxH,MAAM,WACV,kBAACyH,EAAA,EAAD,CAASjJ,QAAQ,QAAQoB,MAAO,CAACsD,eAAe,gBAAiBE,cAAc,MAAOsE,YAAajF,EAAW,EAAI,GAAIkF,aAAa,KAC/H,yBAAK/H,MAAO,CAACU,QAAQ,SAChBmC,GACG,kBAACpB,EAAA,EAAD,CACIuG,KAAK,QACLrE,KAAK,QACLvD,MAAM,UACNoC,QAAS,kBAAM0D,KACflG,MAAK,2BAAMqF,IAAN,IAAuBhC,WAAW,UACvC,kBAAC,KAAD,OAKR,yBAAKb,QAAS,WAAOJ,EAAQO,KAAK,MAAO3C,MAAO,CAACU,QAAQ,OAAQuH,OAAO,aAClEpF,GAAY,yBAAK9B,MAAO,GAAImB,OAAQ,GAAIlC,MAAO,CAACa,UAAU,UAAW6F,IAAI,eAAevF,IAAI,SAC9F,kBAACrB,EAAA,EAAD,CAAYlB,QAAQ,KAAKoB,MAAO,CAACa,UAAU,SAAUwC,WAAW,IAAhE,gBAKNR,GAAY,yBAAK7C,MAAOqF,IAElBG,GAAQT,KAAI,SAAAgC,GAAI,OACZ,kBAACrD,EAAA,EAAD,CACIuD,UAAW,SAACvI,GAAD,OAAW,kBAAC,IAAD,iBAAaA,EAAb,CAAoBwI,GAAIH,EAAKtB,IAAK0B,MAAkB,MAAXJ,EAAKtB,IAAW2B,YAAa9B,GAAqBI,SAAUqB,EAAKrB,aAChItF,MAAM,UACNJ,MAAO,CAACqD,WAAW,SAElB0D,EAAKrH,aAQ9B,kBAACwI,GAAA,EAAD,CAAKC,GAAI,IAAKC,GAAI,IAAKC,GAAI,GAAIC,SAAS,UAAUvC,Q,yFC/FvD,SAASwC,GAAgBhE,EAAmBiE,GAC/C,OAAO,aAAIC,MAAMC,KAAK,IAAIC,IAAIpE,EAAQQ,KAAI,SAAC3D,GAAD,OAAYA,EAAOoH,SAASI,MAAK,SAACC,EAAGC,GAC3E,OAAGD,EAAIC,GAAW,EACX,K,IAmJAC,GADQ,I,iDA5InBC,YAAc,SAACzE,EAAyB0E,GACpC,IAAI,IAAI/D,EAAE,EAAGA,EAAEX,EAAQO,OAAQI,KACI,IAA5BX,EAAQW,GAAGgE,cAGd3E,EAAQW,GAAGiE,UAAY5E,EAAQW,GAAGnD,OAASqH,KAAKC,IAAI,EAAG9E,EAAQW,GAAGoE,MAAQ/E,EAAQW,GAAGgE,cAEzF,IAAI,IAAIhE,EAAE,EAAGA,EAAEX,EAAQO,OAAQI,IAC3B,IAA+B,IAA5BX,EAAQW,GAAGgE,YAAd,CAKA,IADA,IAAIrH,EAAeoH,EAAW1E,EAAQW,GAAGiE,UAAY,GAAK,EAClDI,EAAE,EAAGA,EAAEhF,EAAQO,OAAQyE,KACI,IAA5BhF,EAAQgF,GAAGL,cACX3E,EAAQgF,GAAGxH,OAAOwC,EAAQW,GAAGiE,WAAUtH,IACvC0C,EAAQgF,GAAGJ,UAAU5E,EAAQW,GAAGiE,WAAUtH,KAEjD0C,EAAQW,GAAGrD,KAAOoH,EAAW1E,EAAQW,GAAGnD,OAAS,GAAK,EACtDwC,EAAQW,GAAGsE,QAAU3H,EAGzB,OAAO0C,G,KAGXkF,OAAS,SAAClF,EAAyBmF,GAI/B,IAAI,IAAIxE,EAAE,EAAGA,EAAEX,EAAQO,OAAQI,IAC3BX,EAAQW,GAAGyE,IAAIzE,EAAE,EACjBX,EAAQW,GAAGoE,MAAM,EAIrB,GAAG/E,EAAQO,OAAO,EACd,OAAOP,EAMX,IADA,IAAIpE,EAAiBoE,EAAQQ,KAAI,SAAA6E,GAAC,OAAIA,EAAEzJ,SAAOyI,MAAK,SAACC,EAAEC,GAAH,OAASA,EAAED,KACvD3D,EAAE,EAAGA,EAAE,EAAEX,EAAQO,OAAQI,IAAI,CAEjC,IADA,IAAI2E,EAAmB,EACfN,EAAErE,EAAGqE,EAAEH,KAAKU,IAAI5E,EAAE,EAAGX,EAAQO,QAASyE,IAC1CM,GAAU1J,EAAMoJ,GAEpBhF,EAAQW,GAAGoE,MAAQF,KAAKC,IAAI9E,EAAQW,GAAGoE,MAAQO,EAAS,EAAGH,EAAMK,aAGrE,IAAI,IAAI7E,EAAE,EAAGA,EAAEX,EAAQO,OAAQI,IAAI,CAC/B,IAAI8E,EAAqB,IAAQzF,EAAQO,OAASI,EAAI,IAAKX,EAAQO,OAAO,GAAI,EAC9EP,EAAQW,GAAGoE,MAAQF,KAAKC,IAAI9E,EAAQW,GAAGoE,MAAOF,KAAKU,IAAIE,EAASzF,EAAQO,OAAOI,IAKnF,IADA,IAAInD,EAAgB2H,EAAMO,aAClB/E,EAAE,EAAGA,EAAE,EAAEX,EAAQO,OAAQI,IAC7BX,EAAQW,GAAGoE,MAAQF,KAAKC,IAAI9E,EAAQW,GAAGoE,MAAOvH,GAC9CA,GAAQ,EAIZ,IAAI,IAAImD,EAAE,EAAGA,EAAEX,EAAQO,OAAQI,IAAI,CAC/B,IAAIoE,GAAmBI,EAAMO,aAAa,IAAI1F,EAAQO,OAAOI,EAAE,IAAKX,EAAQO,OAAO,GAAI,EACvFP,EAAQW,GAAGoE,MAAQF,KAAKC,IAAI9E,EAAQW,GAAGoE,MAAOA,GAIlD,IAAI,IAAIpE,EAAE,EAAGA,EAAEX,EAAQO,OAAQI,IAC3BX,EAAQW,GAAGoE,MAAQF,KAAKc,MAAM3F,EAAQW,GAAGoE,MAAQ,KAIrD,OAFA/E,EAAQ,GAAG+E,OAAO,GAEX/E,G,yDAGE4F,GAKT,IAJA,IAAMC,EAAcD,EAAQtE,MAAM,MAAMd,KAAI,SAACsF,GACzC,OAAOA,EAAGxE,MAAM,SAEhBzG,EAAgB,GACZ8F,EAAE,EAAGA,EAAE,EAAEkF,EAAYtF,OAAQI,IAAI,CACrC,IAAM9D,EAAgB,CAClBS,KAAMyI,OAAOF,EAAYlF,GAAG,IAC5BxC,GAAI0H,EAAYlF,GAAG,GACnBxF,KAAM0K,EAAYlF,GAAG,GACrBtD,KAAMwI,EAAYlF,GAAG,GACrB/F,OAAQiL,EAAYlF,GAAG,GACvBnD,OAAQuI,OAAOF,EAAYlF,GAAG,IAC9B/E,MAAOmK,OAAOF,EAAYlF,GAAG,KAEjC9F,EAAIuD,KAAKvB,GAEb,OAAOhC,I,2CAGU+K,GACjB,IAAII,EAAKC,SAASC,cAAc,QAChCF,EAAGG,UAAYP,EAKf,IAJA,IAAIQ,EAAOJ,EAAGK,uBAAuB,YAEjCxL,EAAa,IACbyL,EAAa,EACT3F,EAAE,EAAGA,EAAEyF,EAAK7F,OAAQI,GAAG,EAAE,CAC7B,IAAI4F,EAAaH,EAAKzF,GAAGwF,UAAUK,QAAQ,MACjC,IAAPD,IAASA,EAAIH,EAAKzF,GAAGwF,UAAU5F,QAClC,IAAIwE,EAAeqB,EAAKzF,GAAGwF,UAAUM,OAAO,EAAGF,GAC/C1L,EAAMgK,KAAKU,IAAI1K,EAAKkL,OAAOhB,IAC3BuB,IAGJ,OADGA,EAAI,IAAEzL,EAAI,GACNA,I,sCAGKmF,GAEZ,IADA,IAAI0E,EAAsB,IAAIR,MAAM,MAAMwC,KAAK,GACvC/F,EAAE,EAAGA,EAAEX,EAAQO,OAAQI,IAC3B+D,EAAW1E,EAAQW,GAAGnD,UAG1B,IAAI,IAAImD,EAAE,IAAMA,GAAG,EAAGA,IAClB+D,EAAW/D,IAAI+D,EAAW/D,EAAE,GAEhC,OAAO+D,I,iCAIA1E,EAAmB0E,GAAgC,IAAD,iBACvC1E,GADuC,IACzD,IAAI,EAAJ,qBAA0B,CAAC,IAAnBnD,EAAkB,QACH,QAAhBA,EAAOQ,OACNR,EAAOQ,KAAO,WAElBR,EAAOS,KAAOoH,EAAW7H,EAAOW,OAAO,GAAG,GALW,8BAOzD,OAAOwC,M,gBCpKF2G,GAAoC,SAACxM,GAC9C,OAAIA,EAAMyM,UAEF,yBAAKnL,MAAO,CACRkC,OAAO,sBACPxB,QAAQ,OACR4C,eAAe,SACfC,WAAW,WAEX,kBAAC6H,GAAA,EAAD,CAAkBpL,MAAS,CAACa,UAAU,aAI3C,oCAAGnC,EAAMqH,W,8BCVPsF,GAA+B,SAAC3M,GAEzC,OACI,kBAAC4M,GAAA,EAAD,CACIC,MAAO7M,EAAM6M,MACb3M,QAAQ,WACR4M,SAAU,SAACC,GAAD,OAAO/M,EAAM8M,SAASC,EAAE5H,OAAO1D,QACzCuL,WAAS,EACThJ,GAAG,cACHvC,MAASzB,EAAMiN,WACfC,WAAY,SAACC,GACiB,IAAD,EAAV,UAAXA,EAAGrD,MACH,UAAAgC,SAASsB,eAAe,sBAAxB,SAAwCC,SAGhDC,WAAY,CACRC,eACI,kBAACC,GAAA,EAAD,CAAgBzF,SAAS,SACrB,kBAAC0F,GAAA,EAAD,OAGRC,aACI1N,EAAMiN,WAAW7G,OACjB,kBAACoH,GAAA,EAAD,CAAgBzF,SAAS,OACrB,kBAAChF,EAAA,EAAD,CACIkC,KAAK,QACLnB,QAAW,WACP9D,EAAM8M,SAAS,MAGnB,kBAACa,GAAA,EAAD,QAGN,SCzCTC,GAAqB,SAACC,GAG/B,MAAO,CACHC,KAHSC,SAASF,EAAcC,KAAM,GAItCE,YAHgBD,SAASF,EAAcG,YAAa,M,4DCS/CC,GAAsC,SAACjO,GAChD,IAAM0D,EAAUC,cAChB,OAAQ3D,EAAMkO,MAAMC,MAChB,IAAK,OACD,OACI,kBAACC,GAAA,EAAD,CAAW1J,UAAW1E,EAAMqO,MAAO/M,MAAO,CAACgN,QAAQ,GAAI9K,OAAQ,SAC3D,kBAAC,IAAD,CACIlC,MAAS,CAACe,MAAM,OAAQL,QAAQ,QAASuM,UAAU,OAAQtM,aAAa,OAAQO,aAAa,MAAOD,UAAW,oCAC/GE,IAAOjC,EAAWR,EAAMyB,OAAOT,KAC/B2B,MAASnC,EAAWR,EAAMyB,OAAOT,KACjC4B,KAAMpC,EAAWR,EAAMyB,OAAOR,WAAW4B,iBAIzD,IAAK,OACD,OACI,kBAACuL,GAAA,EAAD,CAAW1J,UAAW1E,EAAMqO,OACxB,kBAACG,GAAA,EAAD,CACIjG,UAAU,SACVzE,QAAS,kBAAIJ,EAAQO,KAAKjE,EAAMyB,MAAMgN,OACtC/M,MAAM,UACNxB,QAAQ,SAEPF,EAAMyB,MAAMA,QAI7B,IAAK,OACD,OACI,kBAAC2M,GAAA,EAAD,CAAW1J,UAAW1E,EAAMqO,MAAO/M,MAAS,CAACoN,WAAY1O,EAAMkO,MAAMS,OAAS,SAAM5N,IAC/Ef,EAAMyB,SC3BdmN,GAAkC,SAAC5O,GAC5C,IAAMmE,EAAWC,wBAAc,CAACC,SAAS,UACnCwK,EAAWzK,wBAAc,CAACC,SAAS,UAFa,EAIxBqB,mBAAS,GAJe,mBAI/CoJ,EAJ+C,KAItCC,EAJsC,OAKxBrJ,mBAAuB,OALC,mBAK/CsJ,EAL+C,KAKtCC,EALsC,KAqBhDnB,EAAe9N,EAAMkP,WAAalP,EAAMkP,WAAWpB,KAAO,EAC1DE,EAAsBhO,EAAMkP,WAAalP,EAAMkP,WAAWlB,YAAchO,EAAMmP,OAAO/I,OAE3F,OACI,oCACI,kBAACgJ,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KAEQrP,EAAMsP,qBACN,kBAAClB,GAAA,EAAD,CAAW1J,UAAY,aAAapD,MAAO,CAACoN,WAAY,MAAxD,KAGA1O,EAAMuP,OAAOlJ,KAAI,SAAC6H,EAAOsB,GAAR,QACXrL,GAAY+J,EAAMuB,eAClBZ,GAAYX,EAAMwB,aACpB,kBAACtB,GAAA,EAAD,CACI1J,UAAU,aACVpD,MAAO,CAACoN,WAAY,KACpBiB,cAAeb,IAAUU,EAAMR,OAAQjO,GAEvC,kBAAC6O,GAAA,EAAD,CACIC,OAAQf,IAAUU,EAClBxG,UAAW8F,IAAUU,EAAMR,EAAQ,MACnClL,QAAS,WACLmL,GAAW,SAACa,GACR,OAAGN,IAAQV,EAAe,MACd,QAATgB,EAAsB,OAClB,SAEXf,EAAWS,KAGdtB,EAAMrB,aAQ/B,kBAACkD,GAAA,EAAD,KACK/P,EAAMmP,OAAOjF,MAvDP,SAACC,EAAeC,GAC/B,IAAM4F,EAAYhQ,EAAMuP,OAAOT,GAAS9N,KAClCiP,EAAkB,QAAZjB,EAAoB,GAAK,EAErC,OAAG7E,EAAE6F,KAAe5F,EAAE4F,GACf7F,EAAEnK,EAAMuP,OAAO,GAAGvO,MAAQoJ,EAAEpK,EAAMuP,OAAO,GAAGvO,OACnC,EACL,EAEPmJ,EAAE6F,GAAa5F,EAAE4F,IACH,EAAPC,EACJA,KA4CgCnK,MAAMgI,EAAOE,GAAcF,EAAO,GAAKE,GAAa3H,KAAI,SAAC5E,EAAO+N,GAAR,OACnF,kBAACH,GAAA,EAAD,CACI/N,MAAO,CAACuF,gBAAiBpF,EAAMyO,OAAS,eAAWnP,IAG/Cf,EAAMsP,qBACN,kBAAClB,GAAA,EAAD,CAAW1J,UAAY,cAAcoJ,EAAOE,EAAcwB,EAAQ,GAGlExP,EAAMuP,OAAOlJ,KAAI,SAAC6H,EAAOsB,GAAR,QACXrL,GAAY+J,EAAMuB,eAClBZ,GAAYX,EAAMwB,aACpB,kBAAC,GAAD,CACIxB,MAASA,EACTzM,MAASA,EAAMyM,EAAMlN,MACrBqN,MAASmB,EAAM,EAAIxP,EAAMuP,OAAOnJ,OAAS,kBAAcrF,c,UClF9EoP,GAA4C,SAACnQ,GAEtD,IAAM0D,EAAUC,cACRyM,EAASC,cAATD,KAHwD,EAIlCxC,GAAmB0C,eAAzCxC,EAJwD,EAIxDA,KAAME,EAJkD,EAIlDA,YAEduC,qBAAU,WACHzC,EAAKE,EAAYhO,EAAMsG,OACtBkK,EAAiB,KAAM,KAE5B,CAACxQ,EAAMsG,MAAOwH,EAAME,IAEvB,IAAMyC,EAAoB,SAACvB,GACvB,IAAIwB,EAAiBN,EAIrB,OAFAM,GADAA,EAAiBA,EAAeC,QAAQ,QAASzB,EAAWpB,KAAK1K,aACjCuN,QAAQ,eAAgBzB,EAAWlB,YAAY5K,aAK7EoN,EAAmB,SAACI,EAAYC,GAClCnN,EAAQO,KAAKwM,EAAkB,CAAC3C,KAAM+C,EAAS7C,kBAOnD,OACI,kBAAC8C,GAAA,EAAD,CACIvI,UAAU,MACVwI,mBAAoB/Q,EAAM+Q,mBAC1BC,QAAS,EACT1K,MAAOtG,EAAMsG,MACb0H,YAAaA,EACbF,KAAMA,EACNmD,aAAcT,EACdU,oBAbwB,SAACN,GAC7BlN,EAAQO,KAAKwM,EAAkB,CAAC3C,OAAME,YAAa4C,EAAMzL,OAAO1D,aCblE8N,GAAsB,CACxB,CACIpB,KAAM,OACNnN,KAAM,OACN6L,MAAO,OACP8B,QAAQ,GAEZ,CACIR,KAAM,OACNnN,KAAM,OACN6L,MAAO,QAEX,CACIsB,KAAM,OACNnN,KAAM,SACN6L,MAAO,UAEX,CACIsB,KAAM,OACNnN,KAAM,QACN6L,MAAO,SAEX,CACIsB,KAAM,OACNnN,KAAM,SACN6L,MAAO,SACP8B,QAAQ,GAEZ,CACIR,KAAM,OACNnN,KAAM,OACN6L,MAAO,SAIFsE,GAAwB,SAACnR,GAClC,IAAM6F,EAAUtB,aACZ,SAACC,GAAD,OACAA,EAAMqB,QAAQA,WAEZuL,EAAkBxD,GAAmB0C,eALC,EAOR5K,mBAAS,IAPD,mBAOrCuH,EAPqC,KAOzBoE,EAPyB,OAQE3L,mBAAwB,IAR1B,mBAQrC4L,EARqC,KAQpBC,EARoB,OASF7L,mBAAwB,IATtB,mBASrC8L,EATqC,KAStBC,EATsB,KAWtC5C,EAAWzK,wBAAc,CAACC,SAAU,UAUpCqN,EAAkB7L,EAAQ8L,QARV,SAACjP,GACnB,OACIA,EAAO1B,KAAK6B,cAAc+O,SAAS3E,EAAWpK,iBAClB,IAA3ByO,EAAgBlL,QAAgBkL,EAAgBjM,MAAK,SAAC5E,GAAD,OAAYA,IAAWiC,EAAOjC,aAC1D,IAAzB+Q,EAAcpL,QAAgBoL,EAAcnM,MAAK,SAACnC,GAAD,OAAUA,IAASR,EAAOQ,YAMpF,OACI,kBAAC,GAAD,CAAkBuJ,UAA8B,IAAnB5G,EAAQO,QACjC,kBAACyL,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,GAAA,EAAD,CAAMxJ,MAAI,EAAC2J,GAAI,GAAIC,GAAI,GACnB,kBAACJ,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,GAAA,EAAD,CAAMxJ,MAAI,EAAC2J,GAAI,GAAIE,GAAI,EAAGD,GAAI,IAC1B,kBAAC,GAAD,CACIpF,MAAM,cACNI,WAAYA,EACZH,SAAU,SAACnL,GAAD,OAAkB0P,EAAc1P,OAGlD,kBAACkQ,GAAA,EAAD,CAAMxJ,MAAI,EAAC2J,GAAI,GAAIE,GAAI,EAAGD,GAAI,IAC1B,kBAACE,GAAA,EAAD,CACIC,UAAQ,EACRC,cAAY,EACZC,QAAWzI,GAAgBhE,EAAS,UACpC0M,eAAkB,SAACC,GAAD,OAAYhS,EAAWgS,GAAkBxR,MAC3DyR,YAAe,SAACC,GAAD,OACX,kBAAC9F,GAAA,EAAD,iBAAe8F,EAAf,CAAuB7F,MAAM,qBAEjC8F,cAAiBC,aAAoB,CACjCC,MAAO,MAEX/F,SAAY,SAACC,EAAG+F,GACZvB,EAAmBuB,OAI/B,kBAACjB,GAAA,EAAD,CAAMxJ,MAAI,EAAC2J,GAAI,GAAIE,GAAI,EAAGD,GAAI,IAC1B,kBAACE,GAAA,EAAD,CACIC,UAAQ,EACRC,cAAY,EACZC,QAAWzI,GAAgBhE,EAAS,QACpC4M,YAAe,SAACC,GAAD,OACX,kBAAC9F,GAAA,EAAD,iBAAe8F,EAAf,CAAuB7F,MAAM,mBAEjC8F,cAAiBC,aAAoB,CACjCC,MAAO,MAEX/F,SAAY,SAACC,EAAG+F,GACZrB,EAAiBqB,SAMrC,kBAACjB,GAAA,EAAD,CAAMxJ,MAAI,EAAC2J,GAAI,GAAIC,GAAI,GACnB,kBAACc,GAAA,EAAD,CAAOrO,UAAU,QAAQpD,MAAS,CAACqD,WAAY,MAAOvC,YAAa,MAAOH,aAAa,SACnF,kBAAC+Q,GAAA,EAAD,CAAgBtO,UAAU,cAAc6D,UAAWwK,KAAOzR,MAAO,CAAC2R,UAAW,IAAKzP,OAAO,gBAAD,OAAkBqL,EAAS,OAAO,QAAlC,OACpF,kBAACqE,GAAA,EAAD,CAAOC,cAAY,GACf,kBAAC,GAAD,CACI5D,OAAQA,GACRJ,OAAQuC,EAAgBrL,KAAI,SAAC3D,GAAD,mBAAC,eAAgBA,GAAjB,IAAyB1B,KAAK,CAACS,MAAOiB,EAAO1B,KAAMyN,KAAK,YAAD,OAAc/L,EAAOsB,UACxGkL,WAAYkC,EACZ9B,qBAAmB,MAI/B,kBAAC,GAAD,CACIhJ,MAASoL,EAAgBtL,OACzB2K,mBAAsB,CAAC,GAAI,GAAI,Y,wCCxI9CqC,GAAqB,CAC9B,CAACpS,KAAM,kBAAmBqK,YAAa,IAAME,aAAc,KAC3D,CAACvK,KAAM,wBAAyBqK,YAAa,IAAME,aAAc,KACjE,CAACvK,KAAM,UAAWqK,YAAa,IAAME,aAAc,KACnD,CAACvK,KAAM,UAAWqK,YAAa,IAAME,aAAc,KACnD,CAACvK,KAAM,UAAWqK,YAAa,IAAME,aAAc,IACnD,CAACvK,KAAM,UAAWqK,YAAa,GAAME,aAAc,IACnD,CAACvK,KAAM,UAAWqK,YAAa,GAAME,aAAc,KAQ1C8H,GAA2C,CACpD,CACIC,cAAe,EACfC,WAAY,GAEhB,CACID,cAAe,EACfC,WAAY,IAEhB,CACID,cAAe,EACfC,WAAY,IAEhB,CACID,cAAe,EACfC,WAAY,IAEhB,CACID,cAAe,EACfC,WAAY,IAEhB,CACID,cAAe,EACfC,WAAY,IAGPC,GAA8C,CACvD,CACIF,cAAe,EACfC,WAAY,GAEhB,CACID,cAAe,EACfC,WAAY,IAEhB,CACID,cAAe,EACfC,WAAY,IAEhB,CACID,cAAe,EACfC,WAAY,IAEhB,CACID,cAAe,EACfC,WAAY,IAGPE,GAA4B,CACrC,IAAIC,KAAKA,KAAKC,IAAI,KAAM,EAAG,IAC3B,IAAID,KAAKA,KAAKC,IAAI,KAAM,EAAG,KCvElBC,GAAc,IAAIF,KAElBG,GAAY,SAACC,GACtB,OAAO,IAAIJ,KAAKA,KAAKC,IAAIG,EAAM,KCwQpBC,GADY,I,iDAhONC,SAAW,SAACC,EAAUC,GACnC,IAAIC,EAAM,IAAIT,KAAKO,GACnB,OAAO,IAAIP,KAAKS,EAAIC,YAAYD,EAAIE,cAAgBH,K,KAGxDI,gBAAkB,SAACC,EAA2BC,GAG1C,IADA,IAAIC,EAAsC,GAClCjO,EAAE,EAAGA,EAAE+N,EAAYnO,OAAQI,IAAK,CAAC,IAAD,iBACdgO,GADc,IACpC,IAAI,EAAJ,qBAAqC,CAAC,IAA9BjB,EAA6B,QAC7BmB,EAAgB,EAAKV,SAASO,EAAY/N,GAAGmO,KAAMpB,EAAWD,eAElEmB,EAAaxQ,KAAK,CACd0Q,KAAMD,EACNrR,OAAQqH,KAAKc,MAAM+I,EAAY/N,GAAGnD,OAASkQ,EAAWA,YACtDnH,IAAK5F,KAPuB,+BAaxCiO,EAAeA,EAAavK,MAAK,SAACC,EAAGC,GACjC,OAAO,IAAIsJ,KAAKvJ,EAAEwK,MAAMC,UAAY,IAAIlB,KAAKtJ,EAAEuK,MAAMC,aAGzD,IApBiG,EAoB7FC,EAA+B,GAC/BnU,EAAqB,GArBwE,eAuBjF+T,GAvBiF,yBAuBzFE,EAvByF,SAwB7FE,EAAQA,EAAMlD,QAAO,SAACmD,GAAD,OAAUA,EAAK1I,MAAQuI,EAAKvI,QAC3CnI,KAAK0Q,GACXE,EAAQA,EAAM3K,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAE/G,OAAS8G,EAAE9G,UAG1C,IAFA,IAAI0R,EAAM,EAEFvO,EAAE,EAAGA,EAAGkE,KAAKU,IAAIyJ,EAAMzO,OAAQ,GAAII,IACvCuO,GAAOF,EAAMrO,GAAGnD,OAEpB3C,EAAIuD,KAAK,CACL0Q,KAAMA,EAAKA,KACXtR,OAAQ0R,KAXhB,IAAI,EAAJ,qBAA8B,IAvBmE,8BAuCjG,OAAOrU,G,KAGXsU,wBAA0B,SAACL,GACvB,OACEA,EAAKM,YAAcrB,GAAYsB,cAC/BP,EAAKQ,aAAevB,GAAYuB,YAChCR,EAAKN,gBAAkBT,GAAYS,cAE5B,MACFM,EAAKS,cAActP,MAAM,EAAG,K,KAEvCuP,0BAA4B,SAACV,EAAYW,GACrC,IAAIxB,EAAOa,EAAKY,iBAAiB,KAC7BC,EAAQb,EAAKc,cACbC,EAAMf,EAAKO,aACf,MAAM,GAAN,OAAUpB,EAAV,cAA2B,IAAPA,EAAS,GAAG,IAAhC,aAAwC0B,EAAxC,cAA2D,IAARA,EAAU,GAAG,IAAhE,YAAuEF,EAAW,EAAX,WAAmBI,EAAnB,OAA4B,K,KAGvGC,iBAAmB,SAAChB,EAAc/J,GAC9B,MAAM,CACF+J,KAAM,EAAKK,wBAAwB,IAAItB,KAAKiB,IAC5CtR,OAAQuH,I,KAIhBgL,mBAAqB,SAACjB,EAAc/J,EAAe0K,GAC/C,MAAM,CACFX,KAAM,EAAKU,0BAA0B,IAAI3B,KAAKiB,GAAOW,GACrDjS,OAAQuH,I,KAKhBiL,kBAAoB,SAACxS,EAAwByS,EAAcC,EAAkBC,EAAgBC,GAOzF,IANA,IAAIC,EAAYH,EAAWnB,UACvBuB,EAAUH,EAASpB,UAEnBxI,EAAM,EACNxB,EAAQ,EACRlK,EAAoC,GAChC8F,EAAE0P,EAAW1P,EAAE2P,EAAS3P,GAAGsP,EAAK,CACpC,KAAM1J,EAAM/I,EAAO+C,QAAU/C,EAAO+I,GAAKuI,KAAKC,WAAapO,GACvDoE,EAAQvH,EAAO+I,GAAK/I,OACpB+I,IAEJ1L,EAAIuD,KAAK,CAAC0Q,KAAKnO,EAAGoE,UAEtB,IAAgB,IAAbqL,EAAkB,CACjB,KAAM7J,EAAM/I,EAAO+C,QAAU/C,EAAO+I,GAAKuI,KAAKC,WAAauB,GACvDvL,EAAQvH,EAAO+I,GAAK/I,OACpB+I,IAEJ1L,EAAIuD,KAAK,CAAC0Q,KAAKwB,EAASvL,UAG5B,OAAOlK,G,KAGX0V,sBAAwB,SACpB/S,EACAyS,EACAC,EACAC,GAGA,OADU,EAAKH,kBAAkBxS,EAAQyS,EAAMC,EAAYC,GAAU,GAC1D3P,KAAI,SAAA5E,GAAK,OAAI,EAAKkU,iBAAiBlU,EAAMkT,KAAMlT,EAAMmJ,W,KAGpEyL,wBAA0B,SACtBhT,EACAyS,EACAC,EACAC,EACAM,EACAhB,GAGA,OADU,EAAKO,kBAAkBxS,EAAQyS,EAAMC,EAAYC,GAChD3P,KAAI,SAAA5E,GAAK,OAAI,EAAKmU,mBAAmBnU,EAAMkT,KAAK2B,EAAQ7U,EAAMmJ,MAAO0K,O,KAKpFiB,WAAa,SAACpM,EAASC,GACnB,OAAGD,EAAEC,EAASD,EACPC,G,KAEXoM,WAAa,SAACrM,EAASC,GACnB,OAAGD,EAAEC,EAASD,EACPC,G,KAGXqM,wBAA0B,SACtBC,EACAC,EAEAC,GAGA,IAFiB,EAEbC,EAAiB,IAAInD,KAAKA,KAAKC,IAAI+C,EAAY,GAAI,IACnDI,EAAe,IAAIpD,KAAKA,KAAKC,IAAI+C,EAAY,GAAI,IACjDK,EAAaF,EAAUjC,UAAY,IAAIlB,KAAKA,KAAKC,IAAI,EAAE,IAAIiB,UAE3DlU,EAAqB,GACrBsW,EAAeF,EAAQlC,UAAYiC,EAAUjC,UAC7CkB,EAAekB,EAAeL,EARjB,eAUCC,GAVD,IAUjB,IAAI,EAAJ,qBAA+B,CAAC,IAAxBlU,EAAuB,QAE3BhC,EAAIuD,KAAK,CACLgT,WAAYvU,EAAOuU,WACnBC,KAAM,CAAC,EAAKb,wBACR3T,EAAOyU,aACPrB,EACA,IAAIpC,KAAKhR,EAAOyU,aAAa,GAAGxC,KAAKC,UAAUmC,GAC/C,IAAIrD,KAAKhJ,KAAKU,IAAIwI,GAAYgB,UAAWlS,EAAOyU,aAAa,GAAGxC,KAAKC,UAAUoC,EAAaD,IAC5FrU,EAAOyU,aAAa,GAAGxC,KAAKC,UAC5B8B,EAAY,GAAGA,EAAY,QApBtB,8BAwBjB,OAAOhW,G,KAGX0W,WAAa,SAACtD,GACV,IAAMuD,EAAc3M,KAAKC,IAAIiJ,GAAYS,cAAe,MACxD,OAAGP,IAASuD,EAAc,EACfzD,GAEAC,GADRC,EAAOuD,EACWvD,EAAO,EACXA,I,KAGrBwD,sBAAwB,SACpBC,EACAZ,EAEAC,EACAY,EACAC,GAMA,IAAIZ,EAAkB,EAAKN,WACvB,EAAKa,WAAWG,EAAU,IAC1BC,GAEAV,EAAgB,EAAKN,WACrB,EAAKY,WAAWG,EAAU,IAC1BE,GAEA3B,GAAgBgB,EAAQlC,UAAYiC,EAAUjC,WAAa+B,EAuB/D,MAAO,CArBiBE,EAAYpD,GAAkB,GACtD,EAAK2C,sBACDQ,EAAaO,aACbrB,EACAe,EACA,EAAKL,WAAY/C,GAAkB,GAAIqD,IACvC,GACoBA,EAAUrD,GAAkB,IAAMoD,EAAYpD,GAAkB,GACxF,EAAK2C,sBACDQ,EAAac,gBACb5B,EACA,EAAKS,WAAW9C,GAAkB,GAAIoD,GACtC,EAAKL,WAAW/C,GAAkB,GAAIqD,IACtC,GACoBA,EAAUrD,GAAkB,GACpD,EAAK2C,sBACDQ,EAAaO,aACbrB,EACA,EAAKS,WAAWM,EAAWpD,GAAkB,IAC7CqD,GACA,M,mBCrQL,SAASa,GAAe3W,GAW3B,IAVA,IAAI4W,EAAW,OACXC,EAAa,OACbC,EAAY,OACZC,EAAW,WAIXC,EAAK,EACLC,EAAK,EACLC,EAAK,EACD1R,EAAE,EAAGA,EAAExF,EAAKoF,OAAQI,IAExBoR,GAAK5W,EAAKmX,WAAW3R,GAAGwR,EACxBH,GAAO7W,EAAKmX,WAAW3R,GAAGyR,EAC1BH,GAAM9W,EAAKmX,WAAW3R,GAAG0R,EAEzBN,GAAKG,EACLF,GAAOE,EACPD,GAAMC,EAENC,EAhBK,KAgBFA,EAAMD,EACTE,EAhBK,KAgBFA,EAAMF,EACTG,EAhBK,KAgBFA,EAAMH,EAMb,OAFAF,EAAO,GAAKA,EAAM,IAClBC,EAAM,IAAMA,EAAK,GACX,OAAN,OAHAF,EAAK,GAAKA,EAAI,IAGd,YAAqBC,EAArB,YAA8BC,EAA9B,KCCG,IAAMM,GAAb,4MAEoBC,gBAA0B,UAF9C,EAIYhB,YAAc3M,KAAKC,IAAIiJ,GAAYS,cAAe,MAJ9D,EAiBIiE,SAAW,SAAC7W,GACR,OAAI,EAAKzB,MAAMuY,WAEZ9W,IAAU,EAAK4V,YAAY,EACnB,MACR5V,EAAQ,EAAK4V,YACL5V,EAAQ,EACZA,EALIA,GAnBnB,2DAMkC,IAAD,OACzB,OAAO+W,KAAKxY,MAAMyY,OAAOpS,KAAI,SAACqS,EAAclJ,GAAf,MACvB,CACE/N,MAAOiX,EAAazB,WACpB9I,KAAM,OACNnK,GAAG,QACHtC,MAAe,IAAR8N,EAAY,EAAK6I,gBAAkBV,GAAee,EAAazB,kBAZtF,+BA2B8B,IAAD,OAErB,OACI,oCACI,yBAAK3V,MAAO,CAAC8H,YAAY,OAAQC,aAAa,SAC9C,kBAACjI,EAAA,EAAD,mBAGA,kBAACuX,GAAA,EAAD,CACIjX,MAAQ,YACRD,MAAS+W,KAAKxY,MAAM4Y,YACpB9L,SAAU,SAAC8D,EAAWkC,GAAZ,OAA4C,EAAK9S,MAAM6Y,eAAe/F,IAChFgG,kBAAkB,OAClBC,kBAAgB,eAChBC,OAAK,EACLlD,KAAQ,EACR1K,IAAOoN,KAAKxY,MAAMiZ,UAClBtO,IAAO6N,KAAKxY,MAAMuY,WAAaC,KAAKxY,MAAMkZ,UAAY,EAAIV,KAAKxY,MAAMkZ,UACrEC,iBAAoBX,KAAKF,YAG7B,kBAAC,IAAD,CAAYjU,SAAS,UACjB,SAACF,GAAD,OACJ,yBAAK7C,MAAO,CAAEe,MAAO,OAAQmB,OAAOW,EAAW,IAAI,IAAKyF,SAAS,WAC7D,kBAAC,KAAD,KACK,EAAK5J,MAAMyY,OAAOrS,QAAU,EAAKpG,MAAMyY,OAAO,GAAGvB,KAAK9Q,OAEvD,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAegT,gBAAgB,QAC/B,kBAAC,KAAD,CAAO/W,MAAO,KACd,kBAAC,KAAD,CAAOgX,QAAQ,OAASC,yBAAyB,IACjD,kBAAC,KAAD,CAASC,WAAY,SAAClR,GAAD,OAAWA,EAAKmR,QAAQnW,QAAQoW,aAAc,CAACpV,SAAS,qBAAsBqV,aAAc,CAACC,WAAW,YAC7H,kBAAC,KAAD,CAASH,QAAW,EAAKI,eAExB,EAAK5Z,MAAMyY,OAAOpS,KAAI,SAACqS,EAAclJ,GAAf,OAAyBkJ,EAAaxB,KAAK7Q,KAAI,SAACwT,EAAWC,GAAZ,OAClE,kBAAC,KAAD,CACIC,mBAAqB,EACrB/Y,KAAiB,IAAX8Y,EAAepB,EAAazB,WAAY,eACtCyB,EAAazB,WAErB9I,KAAK,WACLkL,QAAQ,SACRnC,KAAM2C,EACNG,OAAgB,IAARxK,EAAY,EAAK6I,gBAAkBV,GAAee,EAAazB,YACvEgD,KAAK,EACLC,YAAuB,IAAR1K,EAAW,IAAM,YAGrC2K,UAEF,EAAKna,MAAMoa,WAAW/T,KAAI,SAAAgU,GAAG,OAAI,kBAAC,KAAD,CAAeC,EAAGD,EAAKL,OAAO,gBAGpE,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAeZ,gBAAgB,QAC/B,kBAAC,KAAD,CAAO/W,MAAO,KACd,kBAAC,KAAD,MACA,kBAAC,KAAD,iBApF5B,GAAkCkY,aCXrBC,GAAb,4MAEoBhW,MAAc,GAFlC,EA0EqBiW,iBAAmB,SAAC3H,GACjC,EAAK4H,SAAS,CAACnD,UAAWzE,KA3ElC,kEAKQ0F,KAAKmC,mBAAmB,CAACC,kBAAkB,OALnD,yCAQuBC,GAAkB,IAAD,QAC7BrC,KAAKxY,MAAM4a,kBAAkBxU,QAC1ByU,EAAUD,kBAAkBxU,QAAUyU,EAAUD,oBAAsBpC,KAAKxY,MAAM4a,oBAE/EC,EAAUD,kBAAkBxU,QAAUyU,EAAUD,kBAAkB,GAAGzD,eAAiBqB,KAAKxY,MAAM4a,kBAAkB,GAAGzD,aAMtHqB,KAAKkC,UAAS,SAACI,GAAD,MAAgB,CAC1BvD,UAAW,CACP7M,KAAKU,IAAM,EAAK2P,eAAeC,IAAKtQ,KAAKC,IAAI,EAAKoQ,eAAeE,MAAOH,EAAUvD,UAAYuD,EAAUvD,UAAU,GAAK,IACvH7M,KAAKC,IAAI,EAAKoQ,eAAeE,MAAOvQ,KAAKU,IAAK,EAAK2P,eAAeC,IAAKF,EAAUvD,UAAYuD,EAAUvD,UAAU,GAAK,WAR9HiB,KAAKkC,SAAS,CACVnD,UAAW,CAACiB,KAAKuC,eAAeE,MAAOzC,KAAKuC,eAAeC,UAd/E,qCA+BQ,GAAyC,IAAtCxC,KAAKxY,MAAM4a,kBAAkBxU,QAAsE,IAAxDoS,KAAKxY,MAAM4a,kBAAkB,GAAGzD,aAAa/Q,OACvF,MAAO,CAAC6U,MAAO,EAAGD,IAAK,IAE3B,IAJuC,EAInCE,EAAU,EAJyB,eAKf1C,KAAKxY,MAAM4a,mBALI,IAKvC,IAAI,EAAJ,qBAAqD,CAAC,IAA9ChE,EAA6C,QACjDsE,EAAUxQ,KAAKC,IAAIuQ,EACf,IAAIxH,KAAKK,GAAmByC,WAAW5C,GACnCgD,EAAaO,aAAaP,EAAaO,aAAa/Q,OAAO,GAAGuO,MAAMC,UAClEgC,EAAaO,aAAa,GAAGxC,KAAKC,WAAWP,cAAgB,KAAO,IAT3C,8BAYvC,MAAO,CACH4G,MAAO,EACPD,IAAKE,KA5CjB,+BAkD8B,IAAD,OACrB,OACI,kBAAC,IAAD,CAAY7W,SAAS,UACjB,SAACF,GAAD,OACA,kBAAC,GAAD,CACI8U,UAAa,EAAK8B,eAAeE,MACjC/B,UAAa,EAAK6B,eAAeC,IACjCpC,YAAe,EAAKpU,MAAM+S,UAAY,EAAK/S,MAAM+S,UAAY,CAAC,EAAKwD,eAAeE,MAAO,EAAKF,eAAeC,KAC7GnC,eAAkB,EAAK4B,iBACvBL,WAAc,GACd3B,OAAU,EAAKzY,MAAM4a,kBAAkBxU,QAAU,EAAKpG,MAAM4a,kBAAkB,GAAGzD,aAAa/Q,QAAU,EAAK5B,MAAM+S,UAC/GxD,GAAmB0C,wBACf,EAAKjS,MAAM+S,UACXpT,EAAW,GAAK,GAChB,EAAKnE,MAAM4a,mBAGf,YAnExB,GAAwCL,aCC3BY,GAAb,4MAEoB3W,MAAc,GAFlC,EAKY6S,YAAc3M,KAAKC,IAAIiJ,GAAYS,cAAe,MAL9D,EAkEqBoG,iBAAmB,SAAC3H,GACjC,EAAK4H,SAAS,CAACnD,UAAWzE,KAnElC,kEAOQ0F,KAAKmC,mBAAmB,CAACC,kBAAkB,OAPnD,yCAUuBC,GAAkB,IAAD,QAE7BrC,KAAKxY,MAAM4a,kBAAkBxU,QAC1ByU,EAAUD,kBAAkBxU,QAAUyU,EAAUD,kBAAkB,GAAGzD,eAAiBqB,KAAKxY,MAAM4a,kBAAkB,GAAGzD,cACxHqB,KAAKkC,UAAS,SAACI,GAAD,MAAgB,CAC1BvD,UAAW,CACP7M,KAAKU,IAAMV,KAAKU,IAAI,EAAK2P,eAAeC,IAAK,EAAK3D,YAAc,GAAI3M,KAAKC,IAAI,EAAKoQ,eAAeE,WAA+Bla,IAAxB+Z,EAAUvD,UAA0B,EAAIuD,EAAUvD,UAAU,KACpK7M,KAAKC,IAAI,EAAKoQ,eAAeE,MAAOvQ,KAAKU,IAAKV,KAAKU,IAAI,EAAK2P,eAAeC,IAAK,EAAK3D,YAAc,QAA4BtW,IAAxB+Z,EAAUvD,UAA0B,IAAUuD,EAAUvD,UAAU,YAjB7L,qCAwBQ,OAAyC,IAAtCiB,KAAKxY,MAAM4a,kBAAkBxU,QAAsE,IAAxDoS,KAAKxY,MAAM4a,kBAAkB,GAAGzD,aAAa/Q,OAChF,CAAC6U,MAAO,IAAMD,IAAKxC,KAAKnB,YAAc,GAE1C,CACH4D,MAAOzC,KAAKxY,MAAM4a,kBAAkB,GAAGzD,aAAa,GAAGxC,KAAKY,iBAC5DyF,IAAKxC,KAAKxY,MAAM4a,kBAAkB,GAAGzD,aAAaqB,KAAKxY,MAAM4a,kBAAkB,GAAGzD,aAAa/Q,OAAO,GAAGuO,KAAKY,iBAAmB,KA7B7I,+BAmC8B,IAAD,OAErB,OACI,kBAAC,IAAD,CAAYlR,SAAS,UACjB,SAACF,GAAD,OACA,kBAAC,GAAD,CACIoU,YAAU,EACVU,UAAa,EAAK8B,eAAeE,MACjC/B,UAAa,EAAK6B,eAAeC,IACjCpC,iBAAwC7X,IAAzB,EAAKyD,MAAM+S,UAA0B,CAAC,IAAM,EAAKF,aAAe,EAAK7S,MAAM+S,UAC1FsB,eAAkB,EAAK4B,iBACvBL,WAAc3G,GAAkBpN,KAAI,SAAAiP,GAAQ,OAAIvB,GAAmBiB,wBAAwBM,MAC3FmD,OAAU,EAAKzY,MAAM4a,kBAAkBvU,KAAI,SAAAuQ,GAAY,MAAK,CACxDK,WAAWL,EAAaK,WACxBC,KAAM,EAAKlX,MAAM4a,kBAAkB,GAAGzD,aAAa/Q,QAAU,EAAK5B,MAAM+S,UACxExD,GAAmBuD,sBACf,EAAK9S,MAAM+S,UACXpT,EAAW,GAAK,GAChByS,EACA,EAAK5W,MAAM4a,kBAAkB,GAAGzD,aAAa,GAAGxC,KAChD,EAAK3U,MAAM4a,kBAAkB,GAAGzD,aAAa,EAAKnX,MAAM4a,kBAAkB,GAAGzD,aAAa/Q,OAAS,GAAGuO,MAG1G,gBA1DxB,GAAsC4F,aCLhChL,GAAsB,CACxB,CACIpB,KAAM,OACNnN,KAAM,OACN6L,MAAO,OACP8B,QAAQ,GAEZ,CACIR,KAAM,OACNnN,KAAM,OACN6L,MAAO,QAEX,CACIsB,KAAM,OACNnN,KAAM,SACN6L,MAAO,UAEX,CACIsB,KAAM,OACNnN,KAAM,QACN6L,MAAO,SAEX,CACIsB,KAAM,OACNnN,KAAM,SACN6L,MAAO,SACP4C,YAAY,GAEhB,CACItB,KAAM,OACNnN,KAAM,OACN6L,MAAO,OACP6C,YAAY,IAIP0L,GAAsC,SAACpb,GAChD,OACQ,kBAACgT,GAAA,EAAD,CACI1R,MAAO,CAAC2R,UAAU,KAClB1K,UAAWwK,KACXrO,UAAU,SAEV,kBAACwO,GAAA,EAAD,KACI,kBAAC,GAAD,CACI3D,OAAQA,GACRJ,OAAQnP,EAAM6F,aCnBzBwV,GAAb,4MAEoB7W,MAAc,CAC1B8W,oBAAqB,GAErBC,eAAgB,EAChBC,eAAgB,KAChBC,uBAAwB,GACxBC,SAAU,EAEVC,WAAW,GAVnB,EA2KqBC,kBAAoB,SAAChL,EAAYkC,GAC9B,OAAbA,EACC,EAAK9S,MAAM0D,QAAQO,KAAnB,YAGA,EAAKjE,MAAM0D,QAAQO,KAAnB,mBAAoC6O,EAAS9O,MAhLzD,EAmLqB6X,mBAAqB,SAACjL,EAAYkC,GAC/C,EAAK4H,SAAS,CAACc,eAAgB1I,IAC/B,EAAKgJ,gBAAgBhJ,GAAUiJ,MAAK,SAACta,GAAW,IAAD,GACxC,YAAK+C,MAAMgX,sBAAX,eAA2BxX,OAA3B,OAAkC8O,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAU9O,KAC3C,EAAK0W,SAAS,CACVsB,iBAAkBva,QAxLtC,EA+LqBwa,0BAA4B,SACzCrL,EACAkC,EACAoJ,EACAC,GAGc,UAAXD,EACC,EAAKxB,SAAS,CACVY,oBAAqB,GACrBG,uBAAwB,UAGZ1a,IAAZob,IACU,kBAAXD,EACC,EAAKxB,UAAS,SAACI,GAAD,MAAgB,CAC1BQ,oBAAqBR,EAAUQ,oBAAoB3J,QAAO,SAAAjP,GAAM,OAAIA,EAAOsB,KAAOmY,EAAQ3J,OAAOxO,MACjGyX,uBAAwBX,EAAUW,uBAAuB9J,QAAO,SAAAjP,GAAM,OAAIA,EAAOsB,KAAOmY,EAAQ3J,OAAOxO,UAG5F,kBAAXkY,IACJ,EAAKxB,UAAS,SAACI,GAAD,MAAgB,CAC1BW,uBAAwBX,EAAUW,uBAAuBW,OAAOD,EAAQ3J,YAE5E,EAAKsJ,gBAAgBK,EAAQ3J,QAAQuJ,MAAK,SAACta,GACvC,QAAWV,IAARU,GAAqB,EAAK+C,MAAMiX,uBAAuBpW,MAAK,SAAA3C,GAAM,OAAIA,EAAOsB,KAAOmY,EAAQ3J,OAAOxO,MAAI,CACtG,IAAMqY,EAA4B,2BAC3B5a,GAD2B,IAE9BuC,GAAImY,EAAQ3J,OAAOxO,KAGvB,EAAK0W,UAAS,SAACI,GAAD,MAAgB,CAC1BQ,oBAAqBR,EAAUQ,oBAAoBc,OAAOC,cA/NtF,EAyOqBP,gBAAkB,SAAChJ,GAyBhC,OAxBc,IAAIwJ,SAAkC,SAACC,EAASC,GAC1C,OAAb1J,EACCyJ,OAAQxb,IAGR,EAAK2Z,UAAS,SAACI,GAAD,MAAgB,CAACS,eAAgBT,EAAUS,eAAe,MACxEkB,IAAEC,QAAQ,yEAAyE5J,EAAS9O,IAC3F+X,MAAK,SAAAY,GACFJ,EAAQ,CACJpF,aAAcpD,GAAmBO,gBAAgBqI,EAAKtJ,IACtDqE,gBAAiB3D,GAAmBO,gBAAgBqI,EAAKnJ,IACzDyD,WAAWnE,EAAS9R,UAG3B4b,OAAM,WACH,EAAKlC,SAAS,CAACiB,WAAW,IAC1BY,OAAQxb,MAEX8b,QAAO,WACJ,EAAKnC,UAAS,SAACI,GAAD,MAAgB,CAACS,eAAgBT,EAAUS,eAAe,cA7P5F,uEAc0Cxa,IAA/ByX,KAAKxY,MAAMiH,MAAMyL,OAAO1O,IAAoBwU,KAAKxY,MAAM6F,QAAQO,QAC9DoS,KAAKqD,wBAAmB9a,EAAWyX,KAAKsE,oBAfpD,yCAmBuBjC,IACZA,EAAUhV,QAAQO,SAAWoS,KAAKxY,MAAM6F,QAAQO,aAAyCrF,IAA/ByX,KAAKxY,MAAMiH,MAAMyL,OAAO1O,IAClF6W,EAAU5T,MAAMyL,OAAO1O,KAAOwU,KAAKxY,MAAMiH,MAAMyL,OAAO1O,IAAMwU,KAAKxY,MAAM6F,QAAQO,SAC9EoS,KAAKqD,wBAAmB9a,EAAWyX,KAAKsE,oBAtBpD,uCA2BoC,IAAD,OACvBpa,EAAS8V,KAAKxY,MAAM6F,QAAQjF,MAAK,SAAA8B,GAAM,OAAIA,EAAOsB,KAAO,EAAKhE,MAAMiH,MAAMyL,OAAO1O,MACrF,YAAcjD,IAAX2B,EACQ,KAGJA,IAjCf,6CAqCQ,YAAmC3B,IAAhCyX,KAAKhU,MAAMwX,iBACH,CAAExD,KAAKhU,MAAMwX,kBAAmBI,OAAO5D,KAAKhU,MAAM8W,qBAEtD,KAxCf,+BA4C8B,IAAD,OACrB,OACI,yCACiCva,IAA/ByX,KAAKxY,MAAMiH,MAAMyL,OAAO1O,IAAkD,IAA9BwU,KAAKxY,MAAM6F,QAAQO,OAEjE,yBAAK9E,MAAO,CACRkC,OAAO,sBACPxB,QAAQ,OACR4C,eAAe,SACfC,WAAW,WAEX,kBAAC6H,GAAA,EAAD,CAAkBpL,MAAS,CAACa,UAAU,aAGtC,kBAAC,KAAD,CAAM2P,WAAS,EAACC,QAAS,GACrB,kBAAC,KAAD,CAAM1J,MAAI,EAAC2J,GAAI,GAAIE,GAAI,EAAGD,GAAI,GAC1B,kBAAC,KAAD,CAAMH,WAAS,EAACC,QAAS,GAEzB,kBAAC,KAAD,CAAM1J,MAAI,EAAC2J,GAAI,IACX,kBAACG,GAAA,EAAD,CACIE,cAAY,EACZC,QAAWkG,KAAKxY,MAAM6F,QACtB0M,eAAkB,SAACC,GAAD,OAAYA,EAAOxR,MACrCS,MAAS+W,KAAKhU,MAAMgX,eACpB/I,YAAe,SAACC,GAAD,OACX,kBAAC9F,GAAA,EAAD,iBAAe8F,EAAf,CAAuB7F,MAAM,kBAAkB3M,QAAU,eAE7DyS,cAAiBC,aAAoB,CACjCC,MAAO,MAEX/F,SAAY0L,KAAKoD,kBACjBmB,QAAyC,IAA9BvE,KAAKxY,MAAM6F,QAAQO,UAGtC,kBAAC,KAAD,CAAMiC,MAAI,EAAC2J,GAAI,IACX,kBAACG,GAAA,EAAD,CACIC,UAAQ,EACRC,cAAY,EACZC,QAAWkG,KAAKxY,MAAM6F,QACtB0M,eAAkB,SAACC,GAAD,OAAYA,EAAOxR,MACrCyR,YAAe,SAACC,GAAD,OACX,kBAAC9F,GAAA,EAAD,iBAAe8F,EAAf,CAAuB7F,MAAM,gCAEjC8F,cAAiBC,aAAoB,CACjCC,MAAO,MAEX/F,SAAY0L,KAAKyD,0BACjBc,QAAyC,IAA9BvE,KAAKxY,MAAM6F,QAAQO,YAK1C,kBAAC,KAAD,CAAMiC,MAAI,EAAC2J,IAAE,EAACE,IAAE,EAACD,IAAE,GACf,kBAAC/N,EAAD,CAAYxB,OAAQ8V,KAAKhU,MAAMgX,kBAEnC,kBAAC,KAAD,CAAMxJ,GAAI,GAAI1Q,MAAO,CAACiN,UAAU,SAC5B,yBAAKjN,MAAO,CAAEqD,WAAW,MAAOvC,YAAY,QACxC,kBAAC,GAAD,CAAoByD,QAAS2S,KAAKhU,MAAMgX,eAAX,4BAAiChD,KAAKhU,MAAMgX,gBAA5C,IAA4DtL,QAAQ,KAApE,oBAA8EsI,KAAKhU,MAAMiX,yBAAwBjD,KAAKhU,MAAMiX,2BAGjK,kBAAC1I,GAAA,EAAD,CAAOrO,UAAU,QAAQpD,MAAO,CAACe,MAAM,OAAQkM,UAAU,OAAQtM,aAAa,OAAQ0C,WAAW,MAAOvC,YAAY,MAAOwH,SAAS,WACpI,kBAAC,KAAD,CAAMvB,MAAI,EAAC2J,GAAM,IAEb,kBAAC9I,EAAA,EAAD,CAAQnB,SAAS,SAASrG,MAAM,cAAcJ,MAAO,CAACW,aAAa,OAAQM,UAAW,qCACtF,kBAACya,GAAA,EAAD,CACIvb,MAAS+W,KAAKhU,MAAMkX,SACpB5O,SAAY,SAAC8D,EAAYkC,GAAqB,EAAK4H,SAAS,CAACgB,SAAS5I,KACtEmK,UAAQ,EACRC,eAAe,WAEf,kBAACC,GAAA,EAAD,CAAKtQ,MAAM,iBACX,kBAACsQ,GAAA,EAAD,CAAKtQ,MAAM,iBAGf,kBAAC,IAAD,CAAYxI,SAAU,MACrB,SAACF,GAAD,OACD,yBAAK7C,MAAO,CAACyG,SAAU,WAAYuG,QAAQnK,EAAS,MAAO,SAEnD,yBAAK7C,MAAQ,EAAKkD,MAAM+W,qBAAkDxa,IAAhC,EAAKyD,MAAMwX,iBAAkC,CAACrK,OAAO,YAAayL,cAAc,aAAUrc,GAEvG,IAAxB,EAAKyD,MAAMkX,SACR,kBAAC,GAAD,CACId,kBAAqB,EAAKyC,yBAG9B,kBAAC,GAAD,CACIzC,kBAAqB,EAAKyC,2BAMrC,EAAK7Y,MAAM+W,qBAAkDxa,IAAhC,EAAKyD,MAAMwX,mBACzC,yBAAK1a,MAAO,CACRyG,SAAS,WACT1F,MAAM,OACNmB,OAAOW,EAAS,QAAQ,QACxBmZ,IAAI,EACJrV,KAAK,EACLjG,QAAQ,OACR4C,eAAe,SACfC,WAAW,WAEV,EAAKL,MAAM+W,gBAAgD,OAA9B,EAAK/W,MAAMgX,eAErC,kBAAC9O,GAAA,EAAD,MAEA,kBAACtL,EAAA,EAAD,8CAaxB,kBAACjB,EAAD,CAAcG,KAAMkY,KAAKhU,MAAMmX,iBApK/C,GAAuCpB,aA0QjCgD,GAAWC,aAJO,SAAChZ,GAAD,MAAsB,CAC1CqB,QAASrB,EAAMqB,QAAQA,WAGV2X,CAAyBnC,I,uIC/R7BoC,GAAb,4MACoBjZ,MAAe,CAC3ByI,WAAY,IAFpB,EA2CqByQ,mBAAqB,SAAC/b,GACnC,EAAK+Y,SAAS,CAACzN,WAAYtL,KA5CnC,uDAI8B,IAAD,OAErB,OAEI,oCAEI,kBAAC,GAAD,CACIkL,MAAM,UACNI,WAAYuL,KAAKhU,MAAMyI,WACvBH,SAAU0L,KAAKkF,qBAEnB,kBAACtV,EAAA,EAAD,CAAMuV,OAAK,IACJnF,KAAKxY,MAAM6F,QAAQO,OAClBoS,KAAKxY,MAAM6F,QAAQ8L,QAAO,SAAAzG,GAAC,OAAIA,EAAElK,KAAK6B,cAAc+O,SAAS,EAAKpN,MAAMyI,WAAWpK,kBAAgBiD,MAAM,EAAG,IADjFiE,MAAMC,KAAK,IAAID,MAAM,MAE/C1D,KAAI,SAAC3D,GACF,OACIA,EACI,kBAAC4F,EAAA,EAAD,CAAUwB,IAAKpH,EAAOsB,GAAI2E,QAAM,EAAC7E,QAAS,kBAAM,EAAK9D,MAAM4d,mBAAmBlb,KAC1E,kBAACkG,EAAA,EAAD,CAAc5E,GAAItB,EAAOsB,GAAGtB,EAAO1B,KAAM6H,QAASnG,EAAO1B,KAAM6c,UAAWnb,EAAOQ,OACjF,kBAAC4a,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACIzU,KAAK,MACLwD,SAAU,kBAAM,EAAK9M,MAAM4d,mBAAmBlb,IAC9Csb,QAAS,EAAKhe,MAAMsE,eAAee,MAAK,SAAA6F,GAAC,OAAIA,EAAElH,KAAKtB,EAAOsB,UAKvE,kBAACwF,GAAA,EAAD,CAAKG,GAAI,EAAGF,GAAI,EAAGC,GAAI,GACnB,kBAACnG,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,CAAUlB,MAAM,kBAlCxD,GAAyCkY,a,yCCXnC0D,GAAgC,CAClC1b,UAAW,iCACXsE,gBAAiB,qBACjB0H,UAAW,OACXtM,aAAc,OACdO,aAAc,OAGZ0b,GAAmC,2BAClCD,IADkC,IAErC5U,aAAc,MACdD,YAAa,SAGX+U,GAAgC,CAClCzP,WAAY,IACZhN,MAAO,WAEL0c,GAAkC,CACpC1P,WAAY,IACZhN,MAAO,WAEL2c,GAAsC,CACxC3P,WAAY,IACZhN,MAAO,WAKL4c,GAAeC,cAAgB,YAAqB,IAAnBlX,EAAkB,EAAlBA,SAC7BmX,EAAmBpa,wBAAc,CAAEC,SAHtB,MAInB,OACI,kBAACiE,EAAA,EAAD,CAEIhH,MAAOkd,EAAmBN,GAAsBD,GAChDQ,aAAe,WAAiD,aAA/B3S,SAAS4S,KAAKpd,MAAMiI,SAAuBuC,SAAS4S,KAAKpd,MAAMiI,OAAS,SACzGoV,aAAe,WAAiD,SAA/B7S,SAAS4S,KAAKpd,MAAMiI,SAAmBuC,SAAS4S,KAAKpd,MAAMiI,OAAS,MAEpGlC,MAKPuX,GAAeC,cAAkB,YAAqB,IAAnBxX,EAAkB,EAAlBA,SAC/BmX,EAAmBpa,wBAAc,CAAEC,SAjBtB,MAkBnB,OAAO,kBAAC+D,EAAA,EAAD,CAAMuV,MAAOa,EAAkBld,MAAO,CAACwd,WAAW,IAAKzX,MAE5D0X,GAAqB,SAAC,GAAoB,IAAnB1X,EAAkB,EAAlBA,SACnBmX,EAAmBpa,wBAAc,CAAEC,SArBtB,MAsBnB,OAAO,kBAACiE,EAAA,EAAD,CAAUhH,MAAOkd,EAAmB,CAACnV,aAAa,MAAOD,YAAY,aAAQrI,GAAYsG,IAavF2X,GAAb,uKAE8B,IAAD,OACrB,OACI,kBAAC,IAAD,CAAY3a,SAAU,MACrB,SAACF,GAAD,OACD,kBAACya,GAAD,CACIK,YAAa,kBAAOnT,SAAS4S,KAAKpd,MAAMiI,OAAS,YACjD2V,UAAW,YAAgC,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,SACnBtT,SAAS4S,KAAKpd,MAAMiI,OAAS,UAC7B,EAAKvJ,MAAMqf,QAAQ,CAACF,WAAUC,cAElCE,kBAAqB,SAACvS,GAClB,GACoB,iBAAhBA,EAAE5H,OAAOnB,SAC2BjD,IAApCgM,EAAE5H,OAAOoa,wBAC8B,iBAAvCxS,EAAE5H,OAAOoa,uBAAuBvb,GAEhC,OAAO,GAGfwb,4BAA0B,EAC1BC,SAAW,IACXC,WAAcvb,EAAW,IAAM,EAC/Bwb,YAAeC,KAAOC,UAEtB,kBAAC,GAAD,KACI,kBAAChO,GAAA,EAAD,CAAMxJ,MAAI,EAAC2J,GAAM,GACb,kBAACpJ,EAAA,EAAD,WAEJ,kBAACiJ,GAAA,EAAD,CAAMxJ,MAAI,EAAC2J,GAAI,EAAGE,GAAI,GAClB,kBAACtJ,EAAA,EAAD,cAGJ,kBAACiJ,GAAA,EAAD,CAAMxJ,MAAI,EAAC2J,IAAE,GACT,kBAACpJ,EAAA,EAAD,cAGJ,kBAACiJ,GAAA,EAAD,CAAMxJ,MAAI,EAAC2J,IAAE,GACT,kBAACpJ,EAAA,EAAD,gBAGJ,kBAACiJ,GAAA,EAAD,CAAMxJ,MAAI,EAAC2J,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAG3Q,MAAO,CAACwe,SAAU,SAC9C,kBAAClX,EAAA,EAAD,CAActH,MAAO,CAACoF,UAAU,QAASnF,MAAM,UAA/C,uBAGP,EAAKvB,MAAMsE,eAAe+B,KAAI,SAAC5E,EAAO+N,GAAR,OAC/B,kBAAC8O,GAAD,CAAexU,IAAK0F,EAAOA,MAAOA,GAC9B,kBAACqC,GAAA,EAAD,CAAMxJ,MAAI,EAAC2J,GAAM,GACjB,kBAACpJ,EAAA,EAAD,KAAc,2BAAInH,EAAMwJ,OAGxB,kBAAC4G,GAAA,EAAD,CAAMxJ,MAAI,EAAC2J,GAAI,EAAGE,GAAI,GAClB,kBAACtJ,EAAA,EAAD,CAActH,MAAO,CAACc,YAAY,IAAKX,EAAMT,OAGjD,kBAAC6Q,GAAA,EAAD,CAAMxJ,MAAI,EAAC2J,IAAE,IAEgB,IAArBvQ,EAAM+I,YAAmB,kBAACjH,EAAA,EAAD,CAAUlB,MAAO,KAC1C,kBAACwP,GAAA,EAAD,CAAMC,WAAS,EAAC9I,UAAU,OACtB,kBAACQ,GAAA,EAAD,CAAKuW,GAAI,IAAK,kBAACnX,EAAA,EAAD,KAAenH,EAAMqJ,UAE/BrJ,EAAM0B,KAAO1B,EAAMqJ,QAAU,kBAAClC,EAAA,EAAD,CAActH,MAAO6c,IAAe,uCAASzT,KAAKsV,IAAIve,EAAM0B,KAAK1B,EAAMqJ,SAAnC,OACjErJ,EAAM0B,OAAS1B,EAAMqJ,QAAU,kBAAClC,EAAA,EAAD,CAActH,MAAO+c,IAAqB,uCAAS5c,EAAM0B,KAAK1B,EAAMqJ,QAA1B,OACzE,kBAAClC,EAAA,EAAD,CAActH,MAAO8c,IAAiB,uCAAS1T,KAAKsV,IAAIve,EAAM0B,KAAK1B,EAAMqJ,SAAnC,SAQtD,kBAAC+G,GAAA,EAAD,CAAMxJ,MAAI,EAAC2J,IAAE,IAEgB,IAArBvQ,EAAM+I,YAAmB,kBAACjH,EAAA,EAAD,CAAUlB,MAAO,KACtC,kBAACwP,GAAA,EAAD,CAAMC,WAAS,EAAC9I,UAAU,OACtB,kBAACQ,GAAA,EAAD,CAAKuW,GAAI,IAAK,kBAACnX,EAAA,EAAD,KAAgBnH,EAAMgJ,YAEhChJ,EAAM4B,OAAS5B,EAAMgJ,UAAY,kBAAC7B,EAAA,EAAD,CAActH,MAAO6c,IAAe,uCAASzT,KAAKsV,IAAIve,EAAM4B,OAAO5B,EAAMgJ,WAArC,OACrE,kBAAC7B,EAAA,EAAD,CAActH,MAAO+c,IAAqB,2CAAU5c,EAAM4B,OAAO5B,EAAMgJ,UAA7B,SAQ5D,kBAACoH,GAAA,EAAD,CAAMxJ,MAAI,EAAC2J,GAAI,EAAGE,GAAI,EAAI5Q,MAAO,CAACwe,SAAU,SACzC,kBAACjO,GAAA,EAAD,CAAMC,WAAS,EAAC9I,UAAU,MAAMiX,QAAQ,YACrC,kBAAC,IAAD,CAAY5b,SA5HjB,MA6HU,SAAC6b,GAAD,OACG,oCACI,kBAAC1W,GAAA,EAAD,CAAMxH,QAAQ,OAAO6C,WAAW,SAASD,eAAe,WAAWxC,YAAa8d,EAAQ,MAAM,GAC1F,kBAACtX,EAAA,EAAD,KAAgB,2BAAInH,EAAMmJ,SAE9B,kBAAC7H,EAAA,EAAD,CAAYkC,KAAK,QAAQnB,QAAW,kBAAM,EAAK9D,MAAMmgB,cAAc1e,EAAMuC,KAAKA,GAAG,gBAC7E,kBAACoc,GAAA,EAAD,CAAQnd,SAAUid,EAAU,aAAUnf,EAAWiD,GAAG,oCAhGhG,GAAuCuW,aC7C1B8F,GAAb,4MACoB7b,MAAe,CAC3BmX,WAAW,GAFnB,EAKqB5Q,OAAS,SAAClF,EAAyBya,GAChD,IAAIC,EAAanN,GAAUxS,MAAK,SAAAoK,GAAK,OAAIA,EAAMhK,OAAOsf,KAClDtV,EAAcuV,GAA0BnN,GAAU,GACtD,OAAO/I,GAAeC,YAAYD,GAAeU,OAAOlF,EAASmF,GAAQ,EAAKhL,MAAMuK,aAR5F,EAWqB8U,QAAU,YAAsC,IAApCF,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,SACnC,EAAKpf,MAAMwgB,kBAAX,2BACO,EAAKxgB,MAAMygB,aADlB,IAEInc,eAAgB,EAAKyG,OAAO2V,KAAU,EAAK1gB,MAAMygB,YAAYnc,eAAgB6a,EAAUC,GAAW,EAAKpf,MAAMygB,YAAYE,mBAdrI,EAiIoB/C,mBAAqB,SAAClb,EAAgBke,GAC/C,EAAK5gB,MAAMygB,YAAYnc,eAAee,MAAK,SAAA6F,GAAC,OAAIA,EAAElH,KAAKtB,EAAOsB,OAG/C,IAAX4c,GACC,EAAKT,cAAczd,EAAOsB,IAK9B,EAAK6c,YAAYne,IA3I7B,EA8IqBme,YAAc,SAACne,GAE5B,EAAK1C,MAAMwgB,kBAAX,2BACO,EAAKxgB,MAAMygB,aADlB,IAEInc,eAAgB,EAAKyG,OAAO,EAAK/K,MAAMygB,YAAYnc,eAAe8X,OAAtC,2BACrB1Z,GADqB,IAExBuI,IAAI,EAAKjL,MAAMygB,YAAYnc,eAAe8B,OAAO,EACjDwE,OAAO,EACPJ,aAAa,EACbM,SAAS,EACTL,WAAW,KACX,EAAKzK,MAAMygB,YAAYE,kBAE/BlE,IAAEqE,KAAK,oEAAoEpe,EAAOsB,IACjF+X,MAAK,SAAAY,GAIF,IAFA,IAAI/R,EAAQgB,OAAO+Q,GACfoE,EAAK,aAAO,EAAK/gB,MAAMygB,YAAYnc,gBAC/BkC,EAAE,EAAGA,EAAEua,EAAM3a,OAAQI,IACzB,GAAGua,EAAMva,GAAGxC,KAAOtB,EAAOsB,KAA8B,IAAxB+c,EAAMva,GAAGgE,YAAiB,CACtD,IAAInC,EAAI,eAAO0Y,EAAMva,IACrB6B,EAAKmC,YAAYI,EAEjBmW,EAAMva,GAAG6B,EACT,EAAKrI,MAAMwgB,kBAAX,2BACO,EAAKxgB,MAAMygB,aADlB,IAEInc,eAAgB,EAAKyG,OAAOgW,EAAO,EAAK/gB,MAAMygB,YAAYE,kBAG9D,UAKX/D,OAAM,WACH,EAAKlC,SAAS,CAACiB,WAAW,QAjLtC,EAqLqBqF,oBAAsB,WACnC,EAAKhhB,MAAMwgB,kBAAX,2BACO,EAAKxgB,MAAMygB,aADlB,IAEInc,eAAgB,OAxL5B,EA2LqB6b,cAAgB,SAACpc,GAC9B,EAAK/D,MAAMwgB,kBAAX,2BACO,EAAKxgB,MAAMygB,aADlB,IAEInc,eAAgB,EAAKyG,OAAO,EAAK/K,MAAMygB,YAAYnc,eAAeqN,QAAO,SAAAjP,GAAM,OAAIA,EAAOsB,KAAOD,KAAW,EAAK/D,MAAMygB,YAAYE,mBA9L/I,EAiMqBM,kBAAoB,SAAClU,GAClC,EAAK/M,MAAMwgB,kBAAX,2BACO,EAAKxgB,MAAMygB,aADlB,IAEIE,cAAe5T,EAAE5H,OAAO1D,MACxB6C,eAAgB,EAAKyG,OAAO,EAAK/K,MAAMygB,YAAYnc,eAAgByI,EAAE5H,OAAO1D,WArMxF,uEAmBuCV,IAA5ByX,KAAKxY,MAAMkH,SAAS1C,OAAiD,OAA5BgU,KAAKxY,MAAMkH,SAAS1C,YAAuDzD,IAAxCyX,KAAKxY,MAAMkH,SAAS1C,MAAMe,WACrGiT,KAAKoF,mBAAmBpF,KAAKxY,MAAMkH,SAAS1C,MAAMe,WAAW,KApBzE,+BAwB8B,IAAD,OACrB,OACI,oCACI,kBAAC,IAAD,CAAYlB,SAAU,MACrB,SAACF,GAAD,OACD,kBAACqF,GAAA,EAAD,CAAK0X,GAAI/c,EAAW,EAAI,GACpB,kBAAC0N,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACjB,sCACG5N,GAAoD,IAAxC,EAAKnE,MAAMygB,YAAYU,eACtC,kBAACtP,GAAA,EAAD,CAAMxJ,MAAI,EAAC2J,GAAI,GAAKE,GAAI,EAAG5Q,MAAO,CAACwe,SAAS,UACxC,kBAAC,GAAD,CACIja,QAAW,EAAK7F,MAAM6F,QACtB+X,mBAAsB,EAAKA,mBAC3BtZ,eAAkB,EAAKtE,MAAMygB,YAAYnc,oBAK9CH,GAAoD,IAAxC,EAAKnE,MAAMygB,YAAYU,eAClC,kBAACtP,GAAA,EAAD,CAAMxJ,MAAI,EAAC2J,GAAI,GAAIE,IAAE,GACjB,kBAACL,GAAA,EAAD,CAAMC,WAAS,EAACmO,QAAQ,gBAAgBpb,WAAW,UAC/C,kBAACgN,GAAA,EAAD,CAAMxJ,MAAI,GACV,kBAAC+Y,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,cACA,kBAACC,GAAA,EAAD,CACI7f,MAAO,EAAKzB,MAAMygB,YAAYE,cAC9B7T,SAAU,EAAKmU,mBAEd7N,GAAU/M,KAAI,SAAA2E,GAAK,OAAI,kBAACuW,GAAA,EAAD,CAAU9f,MAAOuJ,EAAMhK,MAAOgK,EAAMhK,YAIpE,kBAAC6Q,GAAA,EAAD,CAAMxJ,MAAI,GACV,kBAACrD,EAAA,EAAD,CACI9E,QAAQ,YACRwB,MAAM,YACN8f,UAAW,kBAACC,GAAA,EAAD,MACX3d,QAAS,EAAKkd,oBACd1f,MAAO,CAACC,MAAM,UALlB,WAWJ,kBAACH,EAAA,EAAD,CAAYC,MAAM,QAAQnB,QAAQ,QAAOoB,MAAO,CAACiN,UAAU,GAAInM,YAAY,GAAIV,MAAM,iBACjF,2BAAIyC,EAAW,4BACX,qBAER,kBAAC,GAAD,CACIG,eAAkB,EAAKtE,MAAMygB,YAAYnc,eACzC+a,QAAW,EAAKA,QAChBc,cAAiB,EAAKA,gBAEzB,EAAKngB,MAAMygB,YAAYnc,eAAe8B,OAAS,GAChD,yBAAK9E,MAAO,CAACoF,UAAU,SAAUzD,SAAS,OAAQye,WAAY,QAAShgB,MAAM,YACzE,qCAGA,0BAAMJ,MAAO,CAACqD,WAAW,EAAGvC,YAAY,EAAEV,MAAM,UAAWgN,WAAW,MACjE,EAAE,EAAK1O,MAAMygB,YAAYnc,eAAe8B,QAE7C,mDACmB,EAAKpG,MAAMygB,YAAYnc,eAAe8B,OAAO,EAAI,IAAI,GADxE,2CAe5B,kBAAC,IAAD,CAAY/B,SAAU,KAClB,kBAACsd,GAAA,EAAD,CACIlgB,MAAS+W,KAAKxY,MAAMygB,YAAYU,aAChCrU,SAAU,SAACC,EAAG+F,GACV,EAAK9S,MAAMwgB,kBAAX,2BACO,EAAKxgB,MAAMygB,aADlB,IAEIU,aAAcrO,MAGtBxR,MAAS,CACLe,MAAM,OACN0F,SAAU,QACVG,OAAQ,IAERD,KAAK,IACL1F,UAAW,mCACXuF,OAAQ,OAEZ8Z,YAAU,GAEV,kBAACC,GAAA,EAAD,CAAwBhV,MAAM,iBAAiBvL,MAAO,CAAC+C,SAAS,UAAWyd,KAAM,kBAACC,GAAA,EAAD,QACjF,kBAACF,GAAA,EAAD,CAAwBhV,MAAM,YAAYvL,MAAO,CAAC+C,SAAS,UAAWyd,KAAM,kBAAC,KAAD,UAGpF,kBAAC3hB,EAAD,CAAcG,KAAMkY,KAAKhU,MAAMmX,iBA5H3C,GAAqCpB,aAqN/ByH,GAASxE,aAXS,SAAChZ,GAAD,MAAsB,CAC1CqB,QAASrB,EAAMqB,QAAQA,QACvB0E,WAAY/F,EAAMqB,QAAQ0E,WAC1BkW,YAAajc,EAAMC,WAGI,SAACwd,GAAD,MAAmC,CAC1DzB,kBAAmB,SAACC,GAAD,OAA8BwB,EC1O9C,SAA2BxB,GAC9B,MAAM,CACFtS,KCF2B,sBDG3BqL,QAASiH,GDuO6CD,CAAkBC,QAIjEjD,CAA6C6C,I,IGxNtD6B,G,4MACY1d,MAAe,CAC7BmX,WAAW,G,kEAEa,IAAD,OACvBc,IAAEqE,KAAK,wDACJ/E,MAAK,SAAAY,GACF,IAAM9W,EAAoBwE,GAAe8X,aAAaxF,GAChDpS,EAAsBF,GAAe+X,gBAAgBvc,GAC3D,EAAK7F,MAAMqiB,mBAAmB,CAC5B9X,aACA1E,QAASwE,GAAeiY,WAAWzc,EAAS0E,QAGjDqS,OAAM,WACH,EAAKlC,SAAS,CAACiB,WAAW,S,+BAOhC,OACE,kBAAC,IAAD,KACE,kBAAC,GAAD,KACE,kBAAC4G,EAAA,EAAD,CAAWjhB,MAAO,CAACgN,QAAS,IAC1B,kBAAC,IAAD,CAAO7F,OAAK,EAAC2H,KAAK,IAAI7H,UAAW9C,IACjC,kBAAC,IAAD,CAAOgD,OAAK,EAAC2H,KAAK,UAAU7H,UAAWyZ,KACvC,kBAAC,IAAD,CAAOvZ,OAAK,EAAC2H,KAAM,gBAAgB7H,UAAWgV,MAEhD,kBAACgF,EAAA,EAAD,CAAWjhB,MAAO,CAACgN,QAAS,EAAGjK,SAAU,OACvC,kBAAC,IAAD,CAAO+L,KAAK,4BAA4B7H,UAAW4I,OAGvD,kBAAChR,EAAD,CAAcG,KAAMkY,KAAKhU,MAAMmX,iB,GAlCZpB,aAArB2H,GAmBGM,YAAcN,GAAalhB,KAqBpC,IAKeyhB,GADHjF,YAAQ,MAJO,SAACyE,GAAD,MAAmC,CAC5DI,mBAAoB,SAACK,GAAD,OAAgCT,ECxD/C,SAA4BS,GAC/B,MAAO,CACHvU,KCR4B,uBDS5BqL,QAASkJ,GDqD8CL,CAAmBK,QAGtElF,CAAkC0E,IGxD1BS,QACW,cAA7BC,OAAO1b,SAAS2b,UAEe,UAA7BD,OAAO1b,SAAS2b,UAEhBD,OAAO1b,SAAS2b,SAAS5b,MACvB,2D,aChBA6b,GAA6B,CAC/Bjd,QAAS,GACT0E,WAAY,ICDhB,IAAMuY,GAA4B,CAC9Bxe,eAAgB,GAChBqc,cAAevN,GAAU,GAAGpS,KAC5BmgB,aAAc,GCFlB,IAMe4B,GANKC,aAAgB,CAChCnd,QFEG,WAIU,IAHbrB,EAGY,uDAHJse,GACRG,EAEY,uCACZ,OAAOA,EAAO9U,MACV,IFXsB,iBEYlB,kCACO3J,GADP,IAEIqB,QAASod,EAAOzJ,UAExB,IFf4B,uBEgBxB,OAAOyJ,EAAOzJ,QAClB,QACI,OAAOhV,IEffC,ODGG,WAIS,IAHZD,EAGW,uDAHHse,GACRG,EAEW,uCACX,OAAOA,EAAO9U,MACV,INb2B,sBMcvB,OAAO8U,EAAOzJ,QAClB,QACI,OAAOhV,MEhBJ0e,GCCAC,aAAYC,ICK3BC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUL,MAAOA,IACf,kBAAC,GAAD,QAIJpX,SAASsB,eAAe,SN4HpB,kBAAmBoW,WACrBA,UAAUC,cAAcC,MACrB3H,MAAK,SAAA4H,GACJA,EAAaC,gBAEdhH,OAAM,SAAAiH,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.5434776c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"playerlist_selected__12DpV\"};","import React from \"react\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props: any) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nexport function ErrorMessage(props: {show: boolean}){\r\n\r\n    return(\r\n        <Snackbar open={props.show} >\r\n            <Alert severity=\"error\">\r\n                Failed to load data\r\n            </Alert>\r\n        </Snackbar>\r\n\r\n    )\r\n}","import countryCodes from '../data/countryCodes.json'\r\nimport { Player } from './player-service'\r\n\r\nexport interface CountryCode{\r\n    name: string; \r\n    alpha2code: string;\r\n}\r\n\r\nexport function getCountry(nation: string): CountryCode{\r\n    let ret = countryCodes.find(country => country.fifa===nation)\r\n    if(ret===undefined){\r\n        return {\r\n            name:\"Not Found\",\r\n            alpha2code:\"_empty\",\r\n        }\r\n    }\r\n    return {\r\n        name: ret.name,\r\n        alpha2code: ret.a2\r\n    }\r\n}\r\n","import { Button, CardActionArea, CardActions, CardContent, IconButton, Typography } from \"@material-ui/core\";\r\nimport Card from '@material-ui/core/Card';\r\nimport { ArrowForward } from \"@material-ui/icons\";\r\nimport { Skeleton } from \"@material-ui/lab\";\r\nimport React from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getCountry } from \"../services/country-service\";\r\nimport { Player } from \"../services/player-service\";\r\nimport Flag from 'react-world-flags'\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../store/combineReducers\";\r\n\r\ninterface OwnProps{\r\n    player: Player | null\r\n}\r\n\r\ntype Props = OwnProps\r\n\r\n\r\nfunction PlayerDetail(props: {text: string, value: string, bold?: boolean}){\r\n    return (\r\n        <>\r\n            <Typography align='right' style={{float:'right'}}>\r\n                {props.bold === true ? <b>{props.value}</b> : props.value}\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n                {props.text}\r\n            </Typography>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction PlayerContent(props: {player: Player, withFlag:boolean, homePage?:boolean}){\r\n    return(\r\n        <CardContent style={props.homePage===true ? undefined :{paddingBottom:4}}>\r\n            <div style={{display:'flex', marginBottom: props.homePage===true ? '0px':'12px'}}>\r\n                {props.withFlag && <Flag \r\n                    style={{alignSelf:'center', marginRight:'12px',width: props.homePage===true ? '60px':'90px',objectFit:'fill', boxShadow: '0 0px 3px 0px rgb(150, 150, 150)', borderRadius:\"4px\",}}\r\n                    alt = {getCountry(props.player.nation).name}\r\n                    title = {getCountry(props.player.nation).name}\r\n                    code={getCountry(props.player.nation).alpha2code.toLowerCase()}\r\n                />}\r\n                <Typography variant={props.homePage===true ? 'h6' : \"h5\"} align='center' style = {{margin:'auto'}} color={props.homePage===true?'textPrimary':\"secondary\"}>\r\n                    {props.player.name}\r\n                </Typography>\r\n                {props.homePage===true &&\r\n                    <IconButton >\r\n                        <ArrowForward fontSize='large'/>\r\n                    </IconButton>\r\n                }\r\n            </div>\r\n            {props.homePage!==true &&\r\n                <>\r\n                    <PlayerDetail text='Club' value={props.player.club} />\r\n                    <PlayerDetail text='Rank' value={props.player.rank.toString()} bold/>\r\n                    <PlayerDetail text='Points' value={props.player.points.toString()} bold/>\r\n                    <PlayerDetail text='Player Value' value={props.player.value.toString()}/>\r\n                </>\r\n            }\r\n            \r\n        </CardContent>\r\n    )\r\n}\r\nfunction PlayerSkeleton(){\r\n    return(\r\n        <CardContent >\r\n            <div style={{display:'flex'}}>\r\n                <div style={{alignSelf:'center'}}><Skeleton variant='rect' width={60} height={40} /></div>\r\n                <div style={{margin:'auto'}}><Skeleton variant='text' width='120px' height={30}/></div>\r\n                <div style={{alignSelf:'center'}}><IconButton><ArrowForward fontSize='large'/></IconButton></div>\r\n            </div>\r\n            \r\n        </CardContent>\r\n    )\r\n}\r\n\r\n\r\nexport function PlayerHomeCard(props: {player?: Player}){\r\n    let history = useHistory()\r\n    \r\n    function PlayerClicked(playerId?: string){\r\n        if(playerId===undefined)return\r\n        history.push(`/players/${playerId}`)\r\n    }\r\n    return(\r\n        <Card  style = {{width:'100%', height:'100%'}}>\r\n            <CardActionArea onClick={() => PlayerClicked(props.player?.id)} >\r\n                {\r\n                    props.player === undefined ? <PlayerSkeleton/> :\r\n                    <PlayerContent player={props.player} withFlag homePage/>\r\n                }\r\n            </CardActionArea>\r\n        </Card>\r\n\r\n    )\r\n}\r\n\r\nexport default function PlayerCard(props: Props){\r\n    const isMobile = useMediaQuery({maxWidth: 959});\r\n    const history = useHistory()\r\n    const playersCompare = useSelector(\r\n        (state: RootState) => \r\n        state.ranker.playersCompare\r\n    )\r\n    return (\r\n        props.player === null ?\r\n        <Card className=\"Paper\" style = {{ display:'flex', height: '230px', width:'100%', maxWidth:'650px', marginLeft:'auto', marginRight:'auto'}}>\r\n            <Typography style={{margin:'auto'}}>\r\n                No player selected\r\n            </Typography>\r\n        </Card>\r\n        :\r\n        <Card className=\"Paper\" style = {{display:'flex',justifyContent:'flex-end', alignItems:'stretch',  maxWidth:'650px', marginLeft:'auto', marginRight:'auto', width:'100%'}}>\r\n                \r\n                    <div style={{display:'flex', flexDirection:'column', justifyContent:'space-between', width:'100%'}}>\r\n                        <PlayerContent player={props.player} withFlag={isMobile} />\r\n                        <CardActions>\r\n                            <Button \r\n                                size=\"small\" \r\n                                color=\"primary\"\r\n                                href =  {`https://stiga.trefik.cz/ithf/ranking/player.aspx?ID=${props.player.id}`}\r\n                                target = '_blank'\r\n                            >\r\n                                Learn More\r\n                            </Button>\r\n                            <Button \r\n                                size=\"small\" \r\n                                color=\"primary\"\r\n                                disabled={playersCompare.some(player => props.player?.id===player.id)}\r\n                                onClick = {() => {\r\n                                    history.push({\r\n                                        pathname: '/ranker',\r\n                                        state: {addPlayer: props.player}\r\n                                    })\r\n                                }}\r\n                            >\r\n                                Add to Ranker\r\n                            </Button>\r\n                        </CardActions>\r\n                    </div>\r\n            {!isMobile && <Flag \r\n                style={{width:'340px', flex:'0 0 340px', boxShadow: '0 0px 3px 0px rgb(150, 150, 150)', borderRadius:\"4px\",}}\r\n                alt = {getCountry(props.player.nation).name}\r\n                title = {getCountry(props.player.nation).name}\r\n                code={getCountry(props.player.nation).alpha2code.toLowerCase()}\r\n            />}\r\n        </Card>\r\n    )\r\n}","import { Button, Typography } from \"@material-ui/core\";\r\nimport { Whatshot } from \"@material-ui/icons\";\r\nimport React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { RootState } from \"../store/combineReducers\";\r\nimport { PlayerHomeCard } from \"./player-card\";\r\n\r\n\r\nfunction getSkeletons(count: number){\r\n    let skeletons = []\r\n    for(let i=0; i<count; i++){\r\n        skeletons.push(<PlayerHomeCard/>)\r\n    }\r\n    return skeletons\r\n}\r\n\r\n\r\nexport function Home(){\r\n    \r\n    const isMobile = useMediaQuery({maxWidth:'599px'})\r\n    const [playerCount, setPlayerCount] = useState(6)\r\n\r\n    const players = useSelector(\r\n        (state: RootState) => \r\n        state.players.players.slice(0, playerCount)\r\n    )\r\n    return(\r\n        <>\r\n            <div style={{display:'flex', justifyContent:'center'}}>\r\n                <div style={{alignSelf:'stretch'}}><Whatshot fontSize='large' style={{ color:'#2c387e'}}/></div>\r\n\r\n                    <Typography \r\n                        variant='h4' \r\n                        align='center'\r\n                        style={{\r\n                            color:'white', \r\n                            marginBottom:'20px', \r\n                            WebkitTextStroke:'1px', \r\n                            WebkitTextStrokeColor:'#3f51b5',\r\n                        }}\r\n                        >\r\n                        <b>TOP PLAYERS</b>\r\n                    </Typography>\r\n            </div>\r\n            <div \r\n                style={!isMobile ? {\r\n                    display:'grid', \r\n                    gridTemplateColumns: 'repeat(auto-fit, minmax(350px, 1fr))',\r\n                    gridGap:'20px'\r\n                }:\r\n                {\r\n                    display:'grid', \r\n                    gridGap:'20px'\r\n                }\r\n            }>\r\n                {\r\n                    players.length > 0 ? players.map(value =>\r\n                        <PlayerHomeCard player={value}/>\r\n                    ) : getSkeletons(playerCount)   \r\n                }\r\n            </div>\r\n            <div style={{textAlign:'center', margin:'20px'}}>\r\n                <Button \r\n                    variant='outlined' \r\n                    color='primary' \r\n                    onClick={() => {\r\n                        setPlayerCount(playerCount+6)\r\n                    }}\r\n                    style={{width:'200px'}}\r\n                >\r\n                    Load More\r\n                </Button>\r\n            </div>\r\n        </>\r\n    )\r\n}","import { AppBar, Box, Button, Container, Divider, Drawer, IconButton, List, ListItem, ListItemText, Slide, Toolbar, Typography, useScrollTrigger } from \"@material-ui/core\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport CSS from 'csstype';\r\nimport React, { useState } from \"react\";\r\nimport MediaQuery from \"react-responsive\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\n\r\nconst navBarItemStyle:CSS.Properties = {\r\n    margin:'10px',\r\n    alignSelf:'center'\r\n}\r\n\r\nconst buttonSelectedStyle:CSS.Properties = {\r\n    backgroundColor: '#dddddd'\r\n}\r\n\r\n\r\ninterface navItem{\r\n    name: string\r\n    url: string\r\n    isActive?: (match: any, location: any) => boolean\r\n}\r\n\r\nconst navList: navItem[] = [\r\n    {\r\n        name: 'Home',\r\n        url: '/',\r\n    },\r\n    {\r\n        name: 'Players',\r\n        url: '/players',\r\n    },\r\n    {\r\n        name: 'Table',\r\n        url: '/table/0/20',\r\n        isActive: (match: any, location: any) => {\r\n            const path:string = location.pathname;\r\n            return path.split('/')[1] === 'table';\r\n        }\r\n    },\r\n    {\r\n        name: 'Ranker',\r\n        url: '/ranker',\r\n    },\r\n\r\n]\r\n\r\n\r\nexport const NavBar: React.FC = ({children}) => {\r\n\r\n    let history = useHistory()\r\n    const [opened, setOpened] = useState(false)\r\n\r\n    function toggleDrawer(){\r\n        setOpened(!opened)\r\n    }\r\n    const trigger = useScrollTrigger();\r\n    return(\r\n        <MediaQuery maxWidth={599}>\r\n            {(isMobile) =>\r\n            <>\r\n            {isMobile && <>\r\n                <Drawer anchor='left' open={opened} onClose={() => toggleDrawer()} style={{zIndex:999999}}>\r\n                    <div style={{position:'relative', margin:6}}>\r\n                        <img width={100} height={100} src='/logo256.png' alt='logo'/>\r\n                        <Typography variant=\"h6\"  style={{position:'absolute', left:70, bottom:0}}>\r\n                            TH RANKER\r\n                        </Typography>\r\n                    </div>\r\n                    <Divider/>\r\n                    <List style={{width:'250px'}}>\r\n                        {\r\n                            navList.map(item => \r\n                                <ListItem component={(props) => <NavLink {...props} to={item.url} exact={item.url==='/'} isActive={item.isActive} activeStyle={buttonSelectedStyle} />} onClick={() => toggleDrawer()} button>\r\n                                    <ListItemText primary={item.name}/>\r\n                                </ListItem>\r\n                            )\r\n                        }\r\n                    </List>\r\n                </Drawer>\r\n                </>\r\n            }\r\n            <Slide appear={false} direction=\"down\" in={!trigger}>\r\n\r\n            <AppBar color='default'  >\r\n                <Toolbar variant=\"dense\" style={{justifyContent:'space-between', flexDirection:'row', paddingLeft: isMobile ? 8 : 24, paddingRight:24}}>\r\n                    <div style={{display:'flex'}}>\r\n                        {isMobile &&\r\n                            <IconButton \r\n                                edge=\"start\" \r\n                                size='small' \r\n                                color=\"inherit\" \r\n                                onClick={() => toggleDrawer()} \r\n                                style={{...navBarItemStyle, marginLeft:'10px'}}>\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                        }\r\n\r\n                        \r\n                        <div onClick={() => {history.push('/')}} style={{display:'flex', cursor:'pointer'}}>\r\n                            {!isMobile && <img width={45} height={45} style={{alignSelf:'center'}} src='/logo256.png' alt='logo'/>}\r\n                            <Typography variant=\"h6\" style={{alignSelf:'center', marginLeft:5}}>\r\n                                TH RANKER\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n                    {!isMobile && <div style={navBarItemStyle}>\r\n                        {\r\n                            navList.map(item => \r\n                                <Button \r\n                                    component={(props) => <NavLink {...props} to={item.url} exact={item.url==='/'} activeStyle={buttonSelectedStyle} isActive={item.isActive}  />} \r\n                                    color=\"inherit\" \r\n                                    style={{marginLeft:'10px'}}\r\n                                >\r\n                                    {item.name}\r\n                                </Button>\r\n                            )\r\n                        }\r\n                    </div>}\r\n                </Toolbar>\r\n            </AppBar>\r\n            </Slide>\r\n            <Box pl={1.5} pr={1.5} pt={10} overflow=\"hidden\">{children}</Box>\r\n            </>\r\n        }\r\n        </MediaQuery>\r\n    )\r\n} \r\n","import { Level } from \"../data/scorecalc-data\";\r\n\r\n\r\nexport interface Player{\r\n    name: string,\r\n    id: string,\r\n    rank: number,\r\n    nation: string,\r\n    points: number,\r\n    value: number\r\n    club: string\r\n}\r\n\r\nexport interface PlayerRanked extends Player{\r\n    pos: number\r\n    lowestScore: number\r\n    score: number\r\n    newRank: number\r\n    newPoints: number\r\n}\r\n\r\nexport interface PlayerMain extends Player{\r\n    isMain?: boolean,\r\n}\r\n\r\nexport type PlayerValue = string | number;\r\n\r\nexport function getUniqueValues(players: Player[], key: keyof Player): PlayerValue[]{\r\n    return [...Array.from(new Set(players.map((player) => player[key])))].sort((a, b) => {\r\n        if(a < b) return -1;\r\n        return 1\r\n    })\r\n}\r\n\r\nclass PlayersService {\r\n\r\n    rankPlayers = (players: PlayerRanked[], prefScores:number[]): PlayerRanked[] => {\r\n        for(let i=0; i<players.length; i++){\r\n            if(players[i].lowestScore === -1){\r\n                continue\r\n            }\r\n            players[i].newPoints = players[i].points + Math.max(0, players[i].score - players[i].lowestScore)\r\n        }\r\n        for(let i=0; i<players.length; i++){\r\n            if(players[i].lowestScore === -1){\r\n                continue\r\n            }\r\n\r\n            let rank: number = prefScores[players[i].newPoints + 1] + 1\r\n            for(let j=0; j<players.length; j++){\r\n                if(players[j].lowestScore === -1)continue\r\n                if(players[j].points>players[i].newPoints)rank--\r\n                if(players[j].newPoints>players[i].newPoints)rank++\r\n            }\r\n            players[i].rank = prefScores[players[i].points + 1] + 1\r\n            players[i].newRank = rank\r\n        }\r\n\r\n        return players\r\n    }\r\n\r\n    recalc = (players: PlayerRanked[], level: Level): PlayerRanked[] => {\r\n        \r\n        \r\n        //set player pos\r\n        for(var i=0; i<players.length; i++){\r\n            players[i].pos=i+1\r\n            players[i].score=0;\r\n        }\r\n        \r\n        \r\n        if(players.length<4){\r\n            return players;\r\n        }\r\n        \r\n        \r\n        //which player beaten\r\n        var value:number[] = players.map(p => p.value).sort((a,b) => b-a)\r\n        for(let i=0; i+1<players.length; i++){\r\n            let valueSum: number = 0;\r\n            for(var j=i; j<Math.min(i+4, players.length); j++){\r\n                valueSum+=value[j]\r\n            }\r\n            players[i].score = Math.max(players[i].score, (valueSum/4)*level.coefficient);\r\n        }\r\n        //number of beaten\r\n        for(let i=0; i<players.length; i++){\r\n            let maxScore: number = (((70-1)*(players.length - i - 1))/(players.length-1))+1\r\n            players[i].score = Math.max(players[i].score, Math.min(maxScore,players.length-i))\r\n        }\r\n\r\n        //scalar\r\n        let points:number = level.winnerpoints\r\n        for(let i=0; i+1<players.length; i++){\r\n            players[i].score = Math.max(players[i].score, points)\r\n            points/=2\r\n        }\r\n\r\n        //linear\r\n        for(let i=0; i<players.length; i++){\r\n            let score: number = (((level.winnerpoints-1)*(players.length-i-1))/(players.length-1))+1\r\n            players[i].score = Math.max(players[i].score, score)\r\n        }\r\n\r\n        //sum up\r\n        for(let i=0; i<players.length; i++){\r\n            players[i].score = Math.round(players[i].score - 0.05)\r\n        }\r\n        players[0].score+=10\r\n\r\n        return players\r\n    }\r\n\r\n    parseContent(content: string): Player[]{\r\n        const stringArray = content.split('\\n').map((ln) => {\r\n            return ln.split('\\t');\r\n        });\r\n        let ret: Player[] = []\r\n        for(var i=2; i+1<stringArray.length; i++){\r\n            const player:Player = {\r\n                rank: Number(stringArray[i][0]),\r\n                id: stringArray[i][1],\r\n                name: stringArray[i][2],\r\n                club: stringArray[i][3],\r\n                nation: stringArray[i][4],\r\n                points: Number(stringArray[i][5]),\r\n                value: Number(stringArray[i][6]),\r\n            }\r\n            ret.push(player)\r\n        }\r\n        return ret\r\n    }\r\n\r\n    parsePlayerMinPoints(content: string): number{\r\n        var el = document.createElement('html');\r\n        el.innerHTML = content\r\n        var list = el.getElementsByClassName(\"normTour\");\r\n        \r\n        var ret:number = 100000;\r\n        var cnt:number = 0;\r\n        for(var i=6; i<list.length; i+=7){\r\n            let ind:number = list[i].innerHTML.indexOf('(')\r\n            if(ind===-1)ind=list[i].innerHTML.length\r\n            let score:string = list[i].innerHTML.substr(0, ind);\r\n            ret = Math.min(ret, Number(score));\r\n            cnt++\r\n        }\r\n        if(cnt<5)ret=0\r\n        return ret\r\n    }\r\n\r\n    getPlayerScores(players: Player[]): number[]{\r\n        let prefScores:number[] = new Array(6005).fill(0)\r\n        for(let i=0; i<players.length; i++){\r\n            prefScores[players[i].points]++;\r\n        }\r\n        \r\n        for(let i=6000; i>=0; i--){\r\n            prefScores[i]+=prefScores[i+1]\r\n        }\r\n        return prefScores\r\n\r\n    }\r\n\r\n    fixPlayers(players: Player[], prefScores: number[]): Player[]{\r\n        for(let player of players){\r\n            if(player.club === '???'){\r\n                player.club = 'no club'\r\n            }\r\n            player.rank = prefScores[player.points+1]+1\r\n        }\r\n        return players\r\n    }\r\n\r\n}\r\n\r\nconst playersService = new PlayersService();\r\nexport default playersService","import CircularProgress from \"@material-ui/core/CircularProgress\"\r\nimport React, { PropsWithChildren } from \"react\"\r\n\r\ntype Props = {\r\n    isLoading: boolean;\r\n}\r\n\r\nexport const LoadingComponent: React.FC<Props> = (props) => {\r\n    if (props.isLoading){\r\n        return(\r\n            <div style={{\r\n                height:'calc(100vh - 100px)',\r\n                display:'flex', \r\n                justifyContent:\"center\", \r\n                alignItems:'center'}}\r\n            >\r\n                <CircularProgress style = {{alignSelf:'center'}}/>\r\n            </div>\r\n        )\r\n    }\r\n    return <>{props.children}</>;\r\n}","import { IconButton, InputAdornment, TextField } from \"@material-ui/core\"\r\nimport { Search, Clear } from \"@material-ui/icons\"\r\nimport React from \"react\"\r\n\r\ntype Props = {\r\n    label: string,\r\n    searchText: string,\r\n    onChange: (text: string) => void\r\n}\r\n\r\nexport const SearchField: React.FC<Props> = (props) => {\r\n\r\n    return(\r\n        <TextField \r\n            label={props.label}\r\n            variant=\"outlined\" \r\n            onChange={(e) => props.onChange(e.target.value)} \r\n            fullWidth\r\n            id=\"searchField\"\r\n            value = {props.searchText}\r\n            onKeyPress={(ev) => {\r\n                if (ev.key === 'Enter' ) {\r\n                    document.getElementById('searchField')?.blur();\r\n                }\r\n            }}\r\n            InputProps={{\r\n                startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                        <Search/>\r\n                    </InputAdornment>\r\n                ),\r\n                endAdornment: (\r\n                    props.searchText.length ?\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton \r\n                            size='small'\r\n                            onClick = {() => {\r\n                                props.onChange('')\r\n                            }}\r\n                        >\r\n                            <Clear/>\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                    : null\r\n                )\r\n            }}\r\n        />\r\n\r\n    )\r\n}","import { PaginationLocationProps, PaginationProps } from \"./models\";\r\n\r\nexport const getPaginationProps = (locationProps: PaginationLocationProps): PaginationProps => {\r\n    const page = parseInt(locationProps.page, 0);\r\n    const rowsPerPage = parseInt(locationProps.rowsPerPage, 10);\r\n    return {\r\n        page, \r\n        rowsPerPage,\r\n    };\r\n}","import { Link, TableCell } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport Flag from \"react-world-flags\";\r\nimport { CellField } from \"../../common/models\";\r\nimport { getCountry } from \"../../services/country-service\";\r\n\r\ntype Props = {\r\n    field: CellField;\r\n    value: any;\r\n    class?: string;\r\n}\r\n\r\nexport const TableCellComponent: React.FC<Props> = (props) => {\r\n    const history = useHistory();\r\n    switch (props.field.type) {\r\n        case 'flag':\r\n            return (\r\n                <TableCell className={props.class} style={{padding:10, height: '40px'}}>\r\n                    <Flag\r\n                        style = {{width:'60px', display:\"block\", marginTop:\"auto\", marginBottom:\"auto\", borderRadius:\"4px\", boxShadow: '0 0px 2px 0px rgb(150, 150, 150)'}}\r\n                        alt = {getCountry(props.value).name}\r\n                        title = {getCountry(props.value).name}\r\n                        code={getCountry(props.value).alpha2code.toLowerCase()}\r\n                    />\r\n                </TableCell>\r\n            );\r\n        case 'link':\r\n            return (\r\n                <TableCell className={props.class}>\r\n                    <Link \r\n                        component=\"button\"\r\n                        onClick={()=>history.push(props.value.link)} \r\n                        color=\"inherit\"\r\n                        variant=\"body2\"\r\n                    >\r\n                        {props.value.value}\r\n                    </Link>\r\n                </TableCell>\r\n            );\r\n        case 'text':\r\n            return (\r\n                <TableCell className={props.class} style = {{fontWeight: props.field.isBold ? 600 : undefined}}>\r\n                    {props.value}\r\n                </TableCell>\r\n            );\r\n    }\r\n}","import { TableBody, TableCell, TableFooter, TablePagination, TableSortLabel } from \"@material-ui/core\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport React, { useState } from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { CellField, CellValues } from \"../../common/models\";\r\nimport { PaginationProps } from \"./models\";\r\nimport { TableCellComponent } from \"./table-cell-component\";\r\n\r\ntype Props = {\r\n    fields: CellField[];\r\n    values: CellValues[];\r\n    pagination?: PaginationProps;\r\n    includeSerialNumber?: boolean;\r\n}\r\n\r\nexport const TableComponent: React.FC<Props> = (props) => {\r\n    const isMobile = useMediaQuery({maxWidth:'599px'})\r\n    const isTablet = useMediaQuery({maxWidth:'959px'})\r\n    \r\n    const [orderBy, setOrderBy] = useState(0);\r\n    const [sortDir, setSortDir] = useState<\"asc\"|\"desc\">('asc')\r\n\r\n    const handleSort = (a: CellValues, b: CellValues): number => {\r\n        const fieldName = props.fields[orderBy].name;\r\n        const dir = sortDir === 'asc' ? 1 : -1\r\n        \r\n        if(a[fieldName] === b[fieldName]){\r\n            if(a[props.fields[0].name] < b[props.fields[0].name])\r\n                return -1;\r\n            return 1;\r\n        }\r\n        if (a[fieldName] < b[fieldName])\r\n            return dir * -1;\r\n        return dir;\r\n    }\r\n\r\n    const page: number = props.pagination ? props.pagination.page : 0;\r\n    const rowsPerPage: number = props.pagination ? props.pagination.rowsPerPage : props.values.length;\r\n\r\n    return (\r\n        <>\r\n            <TableHead>\r\n                <TableRow>\r\n                    {\r\n                        props.includeSerialNumber && \r\n                        <TableCell className = \"Table-cell\" style={{fontWeight: 600}} >#</TableCell>\r\n                    }\r\n                    {\r\n                        props.fields.map((field, index) => \r\n                            !(isMobile && field.hideMobile) && \r\n                            !(isTablet && field.hideTablet) && \r\n                            <TableCell \r\n                                className=\"Table-cell\"\r\n                                style={{fontWeight: 600}} \r\n                                sortDirection={orderBy===index?sortDir:undefined}\r\n                            >\r\n                                <TableSortLabel\r\n                                    active={orderBy===index}\r\n                                    direction={orderBy===index?sortDir:'asc'}\r\n                                    onClick={() => {\r\n                                        setSortDir((prev) => {\r\n                                            if(index!==orderBy)return 'asc';\r\n                                            if(prev === 'asc')return 'desc';\r\n                                            return 'asc'\r\n                                        });\r\n                                        setOrderBy(index);\r\n                                    }}\r\n                                >\r\n                                    {field.label}\r\n\r\n                                </TableSortLabel>\r\n                            </TableCell>\r\n                        )\r\n                    }\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {props.values.sort(handleSort).slice(page * rowsPerPage, (page + 1) * rowsPerPage).map((value, index) => \r\n                    <TableRow \r\n                        style={{backgroundColor: value.isMain ? '#fbecf1': undefined}}\r\n                    >\r\n                        {\r\n                            props.includeSerialNumber && \r\n                            <TableCell className = \"Table-cell\">{page * rowsPerPage + index + 1}</TableCell>\r\n                        }\r\n                        {\r\n                            props.fields.map((field, index) => \r\n                                !(isMobile && field.hideMobile) && \r\n                                !(isTablet && field.hideTablet) && \r\n                                <TableCellComponent\r\n                                    field = {field}\r\n                                    value = {value[field.name]}\r\n                                    class = {index+1 < props.fields.length ? \"Table-cell\": undefined}\r\n                                />\r\n                            )\r\n                        }\r\n                    </TableRow>\r\n                )}\r\n            </TableBody>\r\n        </>\r\n    );\r\n}","import { TablePagination } from \"@material-ui/core\"\r\nimport React, { useEffect } from \"react\"\r\nimport { useHistory, useParams, useRouteMatch } from \"react-router-dom\";\r\nimport { getPaginationProps } from \"./helpers\";\r\nimport { PaginationLocationProps, PaginationProps } from \"./models\";\r\n\r\ntype Props = {\r\n    count: number;\r\n    rowsPerPageOptions: number[];\r\n}\r\n\r\nexport const TablePaginationComponent: React.FC<Props> = (props) => {\r\n\r\n    const history = useHistory();\r\n    const { path } = useRouteMatch();\r\n    const { page, rowsPerPage } = getPaginationProps(useParams<PaginationLocationProps>());\r\n    \r\n    useEffect(() => {\r\n        if(page*rowsPerPage>props.count){\r\n            handleChangePage(null, 0);\r\n        }\r\n    }, [props.count, page, rowsPerPage])\r\n\r\n    const getPathWithParams = (pagination: PaginationProps) => {\r\n        let pathWithParams = path;\r\n        pathWithParams = pathWithParams.replace(\":page\", pagination.page.toString());\r\n        pathWithParams = pathWithParams.replace(\":rowsPerPage\", pagination.rowsPerPage.toString());\r\n\r\n        return pathWithParams;\r\n    }\r\n\r\n    const handleChangePage = (event: any, newPage: number) => {\r\n        history.push(getPathWithParams({page: newPage, rowsPerPage}));\r\n    };\r\n    \r\n    const handleChangeRowsPerPage = (event: any) => {\r\n        history.push(getPathWithParams({page, rowsPerPage: event.target.value}));\r\n    };\r\n\r\n    return(\r\n        <TablePagination\r\n            component=\"div\"\r\n            rowsPerPageOptions={props.rowsPerPageOptions}\r\n            colSpan={3}\r\n            count={props.count}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n\r\n    )\r\n}","import { Grid, TableCell, TableContainer, TableHead, TextField, Typography } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { CellValues, CellField } from '../common/models';\r\nimport { CountryCode, getCountry } from '../services/country-service';\r\nimport { getUniqueValues, Player, PlayerMain, PlayerValue } from '../services/player-service';\r\nimport { RootState } from '../store/combineReducers';\r\nimport { LoadingComponent } from './loading-component';\r\nimport { SearchField } from './search-field';\r\nimport { getPaginationProps } from './table/helpers';\r\nimport { PaginationLocationProps } from './table/models';\r\nimport { TableComponent } from './table/table-component';\r\nimport { TablePaginationComponent } from './table/table-pagination-component';\r\n\r\n\r\n\r\nconst fields: CellField[] = [\r\n    {\r\n        type: 'text',\r\n        name: 'rank',\r\n        label: 'Rank',\r\n        isBold: true,\r\n    },\r\n    {\r\n        type: 'link',\r\n        name: 'name',\r\n        label: 'Name',\r\n    },\r\n    {\r\n        type: 'flag',\r\n        name: 'nation',\r\n        label: 'Nation',\r\n    },\r\n    {\r\n        type: 'text',\r\n        name: 'value',\r\n        label: 'Value',\r\n    },\r\n    {\r\n        type: 'text',\r\n        name: 'points',\r\n        label: 'Points',\r\n        isBold: true,\r\n    },\r\n    {\r\n        type: 'text',\r\n        name: 'club',\r\n        label: 'Club',\r\n    },\r\n]\r\n\r\nexport const PlayerTable: React.FC = (props) => {\r\n    const players = useSelector(\r\n        (state: RootState) => \r\n        state.players.players\r\n    )\r\n    const paginationProps = getPaginationProps(useParams<PaginationLocationProps>());\r\n\r\n    const [searchText, setSearchText] = useState('');\r\n    const [selectedNations, setSelectedNations] = useState<PlayerValue[]>([])\r\n    const [selectedClubs, setSelectedClubs] = useState<PlayerValue[]>([])\r\n    \r\n    const isTablet = useMediaQuery({maxWidth: '959px'});\r\n\r\n    const isValidPlayer = (player: Player) => {\r\n        return(\r\n            player.name.toLowerCase().includes(searchText.toLowerCase()) &&\r\n            (selectedNations.length === 0 || selectedNations.some((nation) => nation === player.nation)) &&\r\n            (selectedClubs.length === 0 || selectedClubs.some((club) => club === player.club))\r\n        )\r\n    }\r\n\r\n    const filteredPlayers = players.filter(isValidPlayer);\r\n\r\n    return(\r\n        <LoadingComponent isLoading={players.length === 0}>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} md={3}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} sm={6} md={12}>\r\n                            <SearchField\r\n                                label=\"Player name\"\r\n                                searchText={searchText}\r\n                                onChange={(text: string) => setSearchText(text)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={12}>\r\n                            <Autocomplete\r\n                                multiple\r\n                                blurOnSelect\r\n                                options = {getUniqueValues(players, 'nation')}\r\n                                getOptionLabel = {(option) => getCountry(option as string).name}\r\n                                renderInput = {(params) => \r\n                                    <TextField {...params} label=\"Select nations\" />\r\n                                }\r\n                                filterOptions = {createFilterOptions({\r\n                                    limit: 100\r\n                                })}\r\n                                onChange = {(e, newValue) => {\r\n                                    setSelectedNations(newValue)\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={12}>\r\n                            <Autocomplete\r\n                                multiple\r\n                                blurOnSelect\r\n                                options = {getUniqueValues(players, 'club')}\r\n                                renderInput = {(params) => \r\n                                    <TextField {...params} label=\"Select clubs\" />\r\n                                }\r\n                                filterOptions = {createFilterOptions({\r\n                                    limit: 100\r\n                                })}\r\n                                onChange = {(e, newValue) => {\r\n                                    setSelectedClubs(newValue)\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} md={9}>\r\n                    <Paper className=\"Paper\" style = {{marginLeft: '0px', marginRight: '0px', marginBottom:'12px'}}>\r\n                        <TableContainer className=\"Table-paper\" component={Paper} style={{minHeight: 300, height: `calc(100vh - ${isTablet?'80px':'145px'})`}}>\r\n                            <Table stickyHeader>\r\n                                <TableComponent \r\n                                    fields={fields} \r\n                                    values={filteredPlayers.map((player) => ({...player, name:{value: player.name, link: `/players/${player.id}`}}))} \r\n                                    pagination={paginationProps} \r\n                                    includeSerialNumber\r\n                                />\r\n                            </Table>\r\n                        </TableContainer>\r\n                        <TablePaginationComponent\r\n                            count = {filteredPlayers.length}\r\n                            rowsPerPageOptions = {[20, 50, 100]}\r\n                        />\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </LoadingComponent>\r\n\r\n    )\r\n}\r\n","export interface Level {\r\n    name: string,\r\n    coefficient: number,\r\n    winnerpoints: number\r\n}\r\n\r\nexport const levelList: Level[] = [\r\n    {name: \"Level 1 (World)\", coefficient: 0.96, winnerpoints: 1000},\r\n    {name: \"Level 1 (Continental)\", coefficient: 0.96, winnerpoints: 600},\r\n    {name: \"Level 2\", coefficient: 0.92, winnerpoints: 500},\r\n    {name: \"Level 3\", coefficient: 0.89, winnerpoints: 100},\r\n    {name: \"Level 4\", coefficient: 0.83, winnerpoints: 70},\r\n    {name: \"Level 5\", coefficient: 0.60, winnerpoints: 40},\r\n    {name: \"Level 6\", coefficient: 0.40, winnerpoints: 20},\r\n]\r\n\r\nexport interface PointsPercentage {\r\n    tournamentAge: number,\r\n    percentage: number\r\n}\r\n\r\nexport const percentageNormalList: PointsPercentage[] = [\r\n    {\r\n        tournamentAge: 0,\r\n        percentage: 1\r\n    },\r\n    {\r\n        tournamentAge: 2,\r\n        percentage: 0.8\r\n    },\r\n    {\r\n        tournamentAge: 3,\r\n        percentage: 0.6\r\n    },\r\n    {\r\n        tournamentAge: 4,\r\n        percentage: 0.4\r\n    },\r\n    {\r\n        tournamentAge: 5,\r\n        percentage: 0.2\r\n    },\r\n    {\r\n        tournamentAge: 6,\r\n        percentage: 0\r\n    },\r\n]\r\nexport const percentageExceptionList: PointsPercentage[] = [\r\n    {\r\n        tournamentAge: 0,\r\n        percentage: 1\r\n    },\r\n    {\r\n        tournamentAge: 3,\r\n        percentage: 0.6\r\n    },\r\n    {\r\n        tournamentAge: 4,\r\n        percentage: 0.4\r\n    },\r\n    {\r\n        tournamentAge: 5,\r\n        percentage: 0.2\r\n    },\r\n    {\r\n        tournamentAge: 6,\r\n        percentage: 0\r\n    },\r\n]\r\nexport const exceptionInterval: Date[] = [\r\n    new Date(Date.UTC(2020, 9, 5)),\r\n    new Date(Date.UTC(2021, 6, 1))\r\n]","export const currentDate = new Date()\r\n\r\nexport const toUTCDate = (year:number): Date => {\r\n    return new Date(Date.UTC(year, 0))\r\n}","import { PlayerSeries } from \"../components/charts/players-chart\";\r\nimport {  exceptionInterval, PointsPercentage } from \"../data/scorecalc-data\";\r\nimport { currentDate, toUTCDate } from \"./date-service\";\r\nimport { Player } from \"./player-service\";\r\n\r\nexport interface Tournament{\r\n    date: Date,\r\n    name: string,\r\n    series: string[],\r\n    city: string,\r\n    pos: number,\r\n    points: number\r\n}\r\n\r\nexport interface PlayerWithTournaments extends Player{\r\n    tournaments: PointsByDate[]\r\n}\r\n\r\nexport interface PointsByDate {\r\n    date: Date,\r\n    points: number\r\n}\r\n\r\ninterface PointsByDatePrecalc extends PointsByDate {\r\n    ind: number\r\n}\r\n\r\nexport interface ChartData {\r\n    date: string,\r\n    points: number,\r\n}\r\n\r\nexport interface PlayerPoints {\r\n    pointsNormal: PointsByDate[]\r\n    pointsException: PointsByDate[]\r\n    playerName: string\r\n}\r\n\r\n\r\n\r\nclass TournamentsService {\r\n\r\n    private readonly addYears = (dt: Date, n: number): Date => {\r\n        let dtt = new Date(dt)\r\n        return new Date(dtt.setFullYear(dtt.getFullYear() + n))\r\n    }\r\n\r\n    getPointsByDate = (tournaments: Tournament[], percentageList: PointsPercentage[]): PointsByDate[] => {\r\n        \r\n        let datesToCheck: PointsByDatePrecalc[] = []\r\n        for(let i=0; i<tournaments.length; i++) {\r\n            for(let percentage of percentageList){\r\n                let newDate: Date = this.addYears(tournaments[i].date, percentage.tournamentAge)\r\n\r\n                datesToCheck.push({\r\n                    date: newDate,\r\n                    points: Math.round(tournaments[i].points * percentage.percentage),\r\n                    ind: i\r\n                })\r\n\r\n            }\r\n        }\r\n\r\n        datesToCheck = datesToCheck.sort((a, b) => {\r\n            return new Date(a.date).getTime() - new Date(b.date).getTime()\r\n        })\r\n        \r\n        let best5: PointsByDatePrecalc[] = []\r\n        let ret:PointsByDate[] = []\r\n\r\n        for(let date of datesToCheck){\r\n            best5 = best5.filter((best) => best.ind !== date.ind)\r\n            best5.push(date)\r\n            best5 = best5.sort((a, b) => b.points - a.points)\r\n            let sum = 0\r\n\r\n            for(let i=0; i< Math.min(best5.length, 5); i++){\r\n                sum += best5[i].points;\r\n            }\r\n            ret.push({\r\n                date: date.date,\r\n                points: sum\r\n            })\r\n        }\r\n\r\n\r\n        return ret\r\n    }\r\n\r\n    convertDateToYearString = (date: Date): string  => {\r\n        if (\r\n          date.getDate() === currentDate.getUTCDate() &&\r\n          date.getMonth() === currentDate.getMonth() &&\r\n          date.getFullYear() === currentDate.getFullYear()\r\n        )\r\n          return \"Now\";\r\n        return date.toUTCString().slice(5, 16);\r\n    }\r\n    convertDateToCareerString = (date: Date, interval: number): string  => {\r\n        let year = date.getUTCFullYear()-1970\r\n        let month = date.getUTCMonth()\r\n        let day = date.getUTCDate()\r\n        return `${year} yr${year===1?'':'s'}. ${month} mo${month===1?'':'s'}.${interval < 4 ? ` ${day} d.`:''}`\r\n    }\r\n\r\n    getYearChartData = (date: number, score: number): ChartData => {\r\n        return{\r\n            date: this.convertDateToYearString(new Date(date)),\r\n            points: score\r\n        }\r\n\r\n    }\r\n    getCareerChartData = (date: number, score: number, interval:number): ChartData => {\r\n        return{\r\n            date: this.convertDateToCareerString(new Date(date), interval),\r\n            points: score\r\n        }\r\n\r\n    }\r\n\r\n    scalePointsByDate = (points: PointsByDate[], step: number, startRange: Date, endRange: Date, includeEnd?: boolean): {date:number, score:number}[] => {\r\n        let startTime = startRange.getTime();\r\n        let endTime = endRange.getTime();\r\n\r\n        let ind = 0\r\n        let score = 0\r\n        let ret:{date:number, score:number}[] = []\r\n        for(let i=startTime; i<endTime; i+=step){\r\n            while(ind < points.length && points[ind].date.getTime() <= i){\r\n                score = points[ind].points\r\n                ind++\r\n            }\r\n            ret.push({date:i, score})\r\n        }\r\n        if(includeEnd===true){\r\n            while(ind < points.length && points[ind].date.getTime() <= endTime){\r\n                score = points[ind].points\r\n                ind++\r\n            }\r\n            ret.push({date:endTime, score})\r\n        }\r\n\r\n        return ret\r\n    }\r\n\r\n    scalePointsByDateYear = (\r\n        points: PointsByDate[], \r\n        step: number, \r\n        startRange: Date, \r\n        endRange: Date\r\n    ): ChartData[] => {\r\n        let ret = this.scalePointsByDate(points, step, startRange, endRange, true);\r\n        return ret.map(value => this.getYearChartData(value.date, value.score))\r\n    }\r\n\r\n    scalePointsByDateCareer = (\r\n        points: PointsByDate[], \r\n        step: number, \r\n        startRange: Date, \r\n        endRange: Date, \r\n        offset:number, \r\n        interval: number\r\n    ): ChartData[] => {\r\n        let ret = this.scalePointsByDate(points, step, startRange, endRange);\r\n        return ret.map(value => this.getCareerChartData(value.date-offset, value.score, interval))\r\n    }\r\n\r\n\r\n\r\n    getMaxDate = (a: Date, b:Date): Date=>{\r\n        if(a>b)return a\r\n        return b\r\n    }\r\n    getMinDate = (a: Date, b:Date): Date => {\r\n        if(a<b)return a\r\n        return b\r\n    }\r\n\r\n    getCareerChartDataArray = (\r\n        careerRange: number[],\r\n        density: number,\r\n        \r\n        playerPoints:PlayerPoints[]\r\n    ): PlayerSeries[] => {\r\n\r\n        let startDate:Date = new Date(Date.UTC(careerRange[0], 0))\r\n        let endDate:Date = new Date(Date.UTC(careerRange[1], 0))\r\n        let dateOffset = startDate.getTime() - new Date(Date.UTC(0,0)).getTime()\r\n\r\n        let ret:PlayerSeries[] = []\r\n        let dateInterval = endDate.getTime() - startDate.getTime()\r\n        let step: number = dateInterval / density\r\n\r\n        for(let player of playerPoints){\r\n             \r\n            ret.push({\r\n                playerName: player.playerName,\r\n                data: [this.scalePointsByDateCareer(\r\n                    player.pointsNormal,\r\n                    step,\r\n                    new Date(player.pointsNormal[0].date.getTime()+dateOffset),\r\n                    new Date(Math.min(currentDate.getTime(), player.pointsNormal[0].date.getTime()+dateInterval+dateOffset)),\r\n                    player.pointsNormal[0].date.getTime(),\r\n                    careerRange[1]-careerRange[0]\r\n                )]\r\n            })\r\n        }\r\n        return ret\r\n    }\r\n\r\n    yearToDate = (year: number) => {\r\n        const currentYear = Math.max(currentDate.getFullYear(), 2021);\r\n        if(year === currentYear + 1)\r\n            return currentDate;\r\n        if(year > currentYear)\r\n            return toUTCDate(year - 1);\r\n        return toUTCDate(year);\r\n    }\r\n\r\n    getYearChartDataArray = (\r\n        yearRange: number[], \r\n        density: number, \r\n\r\n        playerPoints:PlayerPoints,\r\n        mainPlayerStartDate: Date,\r\n        mainPlayerEndDate: Date\r\n    ): ChartData[][] => {\r\n        \r\n        \r\n\r\n        //Year might start earlier than first tournament\r\n        let startDate: Date = this.getMaxDate(\r\n            this.yearToDate(yearRange[0]), \r\n            mainPlayerStartDate\r\n        )\r\n        let endDate: Date = this.getMinDate(\r\n            this.yearToDate(yearRange[1]), \r\n            mainPlayerEndDate\r\n        )\r\n        let step: number = (endDate.getTime() - startDate.getTime()) / density\r\n\r\n        let res1: ChartData[] = startDate < exceptionInterval[0] ? \r\n        this.scalePointsByDateYear(\r\n            playerPoints.pointsNormal,\r\n            step, \r\n            startDate, \r\n            this.getMinDate( exceptionInterval[0], endDate)\r\n        ) : []\r\n        let res2: ChartData[] = endDate > exceptionInterval[0] && startDate < exceptionInterval[1]  ? \r\n        this.scalePointsByDateYear(\r\n            playerPoints.pointsException,\r\n            step, \r\n            this.getMaxDate(exceptionInterval[0], startDate), \r\n            this.getMinDate(exceptionInterval[1], endDate)\r\n        ) : []\r\n        let res3: ChartData[] = endDate > exceptionInterval[1] ? \r\n        this.scalePointsByDateYear(\r\n            playerPoints.pointsNormal,\r\n            step, \r\n            this.getMaxDate(startDate, exceptionInterval[1]),\r\n            endDate\r\n        ) : []\r\n        return [res1, res2, res3];\r\n    }\r\n}\r\n\r\nconst tournamentsService = new TournamentsService();\r\nexport default tournamentsService","export function getColorByName(name: string):string{\r\n    let red:number=213874;\r\n    let green:number=736452;\r\n    let blue:number=432654;\r\n    let mod:number=1000000007\r\n    let p1 = 1242;\r\n    let p2 = 5432;\r\n    let p3 = 1435;\r\n    let x1 = 1;\r\n    let x2 = 1;\r\n    let x3 = 1;\r\n    for(let i=0; i<name.length; i++){\r\n        \r\n        red+=name.charCodeAt(i)*x1\r\n        green+=name.charCodeAt(i)*x2\r\n        blue+=name.charCodeAt(i)*x3\r\n\r\n        red%=mod\r\n        green%=mod\r\n        blue%=mod\r\n\r\n        x1=x1*p1%mod\r\n        x2=x2*p2%mod\r\n        x3=x3*p3%mod\r\n    }\r\n\r\n    red= 30 + red%150\r\n    green= 30 + green%150\r\n    blue= 205 + blue%50\r\n    return `rgb(${red},${green},${blue})`\r\n\r\n}","import { Slider, Typography } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport MediaQuery from \"react-responsive\";\r\nimport { CartesianGrid, Legend, LegendPayload, Line, LineChart, ReferenceLine, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"recharts\";\r\nimport { getColorByName } from \"../../services/color-service\";\r\nimport { currentDate } from \"../../services/date-service\";\r\nimport { ChartData } from \"../../services/tournament-service\";\r\n\r\n\r\nexport interface PlayerSeries{\r\n    playerName: string\r\n    data: ChartData[][]\r\n}\r\n\r\ninterface OwnProps{\r\n\r\n    sliderMin:number\r\n    sliderMax:number\r\n    sliderRange: number[]\r\n    onSliderChange:(newValue: number | number[]) => void\r\n    \r\n    references:string[]\r\n    series: PlayerSeries[]\r\n    includeNow?: boolean\r\n\r\n}\r\n\r\ntype Props = OwnProps\r\n\r\n\r\nexport class PlayersChart extends Component<Props, {}>{\r\n    \r\n    public readonly mainPlayerColor: string = \"#0004d8\"\r\n\r\n    private currentYear = Math.max(currentDate.getFullYear(), 2021)\r\n    \r\n    getPayload(): LegendPayload[]{\r\n        return this.props.series.map((playerSeries, index) =>\r\n            ( {\r\n                value: playerSeries.playerName,\r\n                type: \"line\",\r\n                id:\"index\",\r\n                color: index===0 ? this.mainPlayerColor : getColorByName(playerSeries.playerName) \r\n            })\r\n        )\r\n    }\r\n\r\n    getLabel = (value: number): string | number => {\r\n        if(!this.props.includeNow)\r\n            return value;\r\n        if(value === this.currentYear+1)\r\n            return 'Now';\r\n        if(value > this.currentYear)\r\n            return value - 1;\r\n        return value;\r\n    }\r\n\r\n    render(): React.ReactNode{\r\n\r\n        return(\r\n            <>\r\n                <div style={{paddingLeft:'10px', paddingRight:'10px'}}>\r\n                <Typography>\r\n                    Year Range\r\n                </Typography>\r\n                <Slider\r\n                    color = \"secondary\"\r\n                    value = {this.props.sliderRange}\r\n                    onChange={(event:any, newValue: number | number[]) => this.props.onSliderChange(newValue)}\r\n                    valueLabelDisplay=\"auto\"\r\n                    aria-labelledby=\"range-slider\"\r\n                    marks\r\n                    step = {1}\r\n                    min = {this.props.sliderMin}\r\n                    max = {this.props.includeNow ? this.props.sliderMax + 1 : this.props.sliderMax}\r\n                    valueLabelFormat = {this.getLabel}\r\n                />\r\n                </div>\r\n                <MediaQuery maxWidth='599px'>{\r\n                    (isMobile) =>\r\n                <div style={{ width: '100%', height:isMobile ? 400:500, overflow:'hidden' }}>\r\n                    <ResponsiveContainer>\r\n                        {this.props.series.length && this.props.series[0].data.length ?\r\n\r\n                        <LineChart>\r\n                            <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                            <YAxis width={40}/>\r\n                            <XAxis dataKey=\"date\"   allowDuplicatedCategory={false}/>\r\n                            <Tooltip itemSorter={(item) => -item.payload.points} wrapperStyle={{maxWidth:'calc(100% - 50px)'}} contentStyle={{whiteSpace:'normal'}}/>\r\n                            <Legend  payload = {this.getPayload()} />\r\n\r\n                            {this.props.series.map((playerSeries, index) => playerSeries.data.map((chartData, index2) => \r\n                                <Line \r\n                                    isAnimationActive = {false}\r\n                                    name={index2 === 1 ? playerSeries.playerName+ \" (New Rules)\" :\r\n                                            playerSeries.playerName\r\n                                        } \r\n                                    type=\"monotone\" \r\n                                    dataKey=\"points\" \r\n                                    data={chartData} \r\n                                    stroke={index===0 ? this.mainPlayerColor : getColorByName(playerSeries.playerName)} \r\n                                    dot={false} \r\n                                    strokeWidth = {index===0? 2.5 : 1.7}\r\n                                    \r\n                                />\r\n                            )).reverse()}\r\n\r\n                            {this.props.references.map(ref => <ReferenceLine x={ref} stroke=\"#f50057\"/>)}\r\n                        </LineChart>\r\n                        :\r\n                        <LineChart>\r\n                            <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                            <YAxis width={40}/>\r\n                            <XAxis/>\r\n                            <Legend/>\r\n                        </LineChart>\r\n                        }\r\n                    </ResponsiveContainer>\r\n                </div>}\r\n                </MediaQuery>\r\n            </>\r\n        )\r\n    }\r\n    \r\n\r\n\r\n}","import React, { Component } from \"react\";\r\nimport MediaQuery from \"react-responsive\";\r\nimport { currentDate } from \"../../services/date-service\";\r\nimport tournamentsService, { PlayerPoints } from \"../../services/tournament-service\";\r\nimport { PlayersChart } from \"./players-chart\";\r\n\r\n\r\n\r\ninterface OwnProps{\r\n    playerPointsArray: PlayerPoints[]\r\n}\r\n\r\ntype Props = OwnProps\r\n\r\ninterface State{\r\n    yearRange?: number[]\r\n}\r\n\r\n\r\nexport class PlayersCareerChart extends Component<Props, State>{\r\n    \r\n    public readonly state:State = {\r\n    }\r\n    componentDidMount(){\r\n        this.componentDidUpdate({playerPointsArray:[]})\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Props){\r\n        if(this.props.playerPointsArray.length &&\r\n            (!prevProps.playerPointsArray.length || prevProps.playerPointsArray !== this.props.playerPointsArray)){\r\n            \r\n            if(!prevProps.playerPointsArray.length || prevProps.playerPointsArray[0].pointsNormal !== this.props.playerPointsArray[0].pointsNormal){\r\n                this.setState({\r\n                    yearRange: [this.getYearRange().start, this.getYearRange().end]\r\n                })\r\n            }\r\n            else{\r\n                this.setState((prevState) => ({\r\n                    yearRange: [\r\n                        Math.min(  this.getYearRange().end, Math.max(this.getYearRange().start, prevState.yearRange ? prevState.yearRange[0] : 0)),\r\n                        Math.max(this.getYearRange().start, Math.min( this.getYearRange().end, prevState.yearRange ? prevState.yearRange[1] : 100000))\r\n                    ]\r\n                }));                \r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    getYearRange():  {start:number, end:number}{\r\n        if(this.props.playerPointsArray.length===0 || this.props.playerPointsArray[0].pointsNormal.length === 0){\r\n            return {start: 0, end: 10}\r\n        }\r\n        let maxYear = 0;\r\n        for(let playerPoints of this.props.playerPointsArray){\r\n            maxYear = Math.max(maxYear, \r\n                new Date(tournamentsService.getMinDate(currentDate, \r\n                    playerPoints.pointsNormal[playerPoints.pointsNormal.length-1].date).getTime()\r\n                    - playerPoints.pointsNormal[0].date.getTime()).getFullYear() - 1970 + 1\r\n            )\r\n        }\r\n        return {\r\n            start: 0,\r\n            end: maxYear,\r\n        }\r\n    }\r\n    \r\n    \r\n\r\n    render(): React.ReactNode{\r\n        return(\r\n            <MediaQuery maxWidth='599px'>{\r\n                (isMobile) =>\r\n                <PlayersChart\r\n                    sliderMin = {this.getYearRange().start}\r\n                    sliderMax = {this.getYearRange().end}\r\n                    sliderRange = {this.state.yearRange ? this.state.yearRange : [this.getYearRange().start, this.getYearRange().end]}\r\n                    onSliderChange = {this.handleYearChange}\r\n                    references = {[]}\r\n                    series = {this.props.playerPointsArray.length && this.props.playerPointsArray[0].pointsNormal.length && this.state.yearRange ?\r\n                        tournamentsService.getCareerChartDataArray(\r\n                            this.state.yearRange,\r\n                            isMobile ? 20 : 40,\r\n                            this.props.playerPointsArray,\r\n                        )\r\n                        :\r\n                        [] }\r\n                />\r\n            }\r\n            </MediaQuery>\r\n        )\r\n    }\r\n    \r\n    private readonly handleYearChange = (newValue: number | number[]) => {\r\n        this.setState({yearRange: newValue as number[]});\r\n    };\r\n\r\n\r\n}","import React, { Component } from \"react\";\r\nimport MediaQuery from \"react-responsive\";\r\nimport { exceptionInterval } from \"../../data/scorecalc-data\";\r\nimport { currentDate } from \"../../services/date-service\";\r\nimport tournamentsService, { PlayerPoints } from \"../../services/tournament-service\";\r\nimport { PlayersChart } from \"./players-chart\";\r\n\r\n\r\n\r\ninterface OwnProps{\r\n    playerPointsArray: PlayerPoints[]\r\n}\r\n\r\ntype Props = OwnProps\r\n\r\ninterface State{\r\n    yearRange?: number[]\r\n}\r\n\r\n\r\nexport class PlayersYearChart extends Component<Props, State>{\r\n    \r\n    public readonly state:State = {\r\n    }\r\n\r\n    private currentYear = Math.max(currentDate.getFullYear(), 2020)\r\n    componentDidMount(){\r\n        this.componentDidUpdate({playerPointsArray:[]})\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Props){\r\n\r\n        if(this.props.playerPointsArray.length &&\r\n            (!prevProps.playerPointsArray.length || prevProps.playerPointsArray[0].pointsNormal !== this.props.playerPointsArray[0].pointsNormal)){\r\n            this.setState((prevState) => ({\r\n                yearRange: [\r\n                    Math.min(  Math.min(this.getYearRange().end, this.currentYear + 1), Math.max(this.getYearRange().start, prevState.yearRange === undefined ? 0 : prevState.yearRange[0])),\r\n                    Math.max(this.getYearRange().start, Math.min( Math.min(this.getYearRange().end, this.currentYear + 1), prevState.yearRange === undefined ? 1000000 : prevState.yearRange[1]))\r\n                ]\r\n            }));\r\n        }\r\n    }\r\n\r\n    getYearRange():  {start:number, end:number}{\r\n        if(this.props.playerPointsArray.length===0 || this.props.playerPointsArray[0].pointsNormal.length === 0){\r\n            return {start: 2000, end: this.currentYear + 7}\r\n        }\r\n        return {\r\n            start: this.props.playerPointsArray[0].pointsNormal[0].date.getUTCFullYear(),\r\n            end: this.props.playerPointsArray[0].pointsNormal[this.props.playerPointsArray[0].pointsNormal.length-1].date.getUTCFullYear() + 1,\r\n        }\r\n    }\r\n    \r\n    \r\n\r\n    render(): React.ReactNode{\r\n\r\n        return(\r\n            <MediaQuery maxWidth='599px'>{\r\n                (isMobile) =>\r\n                <PlayersChart\r\n                    includeNow\r\n                    sliderMin = {this.getYearRange().start}\r\n                    sliderMax = {this.getYearRange().end}\r\n                    sliderRange = {this.state.yearRange === undefined ? [2000, this.currentYear] : this.state.yearRange}\r\n                    onSliderChange = {this.handleYearChange}\r\n                    references = {exceptionInterval.map(interval => tournamentsService.convertDateToYearString(interval))}\r\n                    series = {this.props.playerPointsArray.map(playerPoints => ({\r\n                        playerName:playerPoints.playerName, \r\n                        data: this.props.playerPointsArray[0].pointsNormal.length && this.state.yearRange ?\r\n                        tournamentsService.getYearChartDataArray(\r\n                            this.state.yearRange,\r\n                            isMobile ? 20 : 40,\r\n                            playerPoints,\r\n                            this.props.playerPointsArray[0].pointsNormal[0].date,\r\n                            this.props.playerPointsArray[0].pointsNormal[this.props.playerPointsArray[0].pointsNormal.length - 1].date\r\n                        )\r\n                        :\r\n                        []\r\n                    })) }\r\n                />\r\n            }\r\n            </MediaQuery>\r\n        )\r\n    }\r\n    \r\n    private readonly handleYearChange = (newValue: number | number[]) => {\r\n        this.setState({yearRange: newValue as number[]});\r\n    };\r\n\r\n\r\n}","import { TableCell, TableContainer, TableHead, Typography } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport React from 'react';\r\nimport { CellValues, CellField } from '../common/models';\r\nimport { PlayerMain } from '../services/player-service';\r\nimport { TableComponent } from './table/table-component';\r\n\r\n\r\ntype Props = {\r\n    players: PlayerMain[]\r\n}\r\n\r\nconst fields: CellField[] = [\r\n    {\r\n        type: 'text',\r\n        name: 'rank',\r\n        label: 'Rank',\r\n        isBold: true,\r\n    },\r\n    {\r\n        type: 'text',\r\n        name: 'name',\r\n        label: 'Name',\r\n    },\r\n    {\r\n        type: 'flag',\r\n        name: 'nation',\r\n        label: 'Nation',\r\n    },\r\n    {\r\n        type: 'text',\r\n        name: 'value',\r\n        label: 'Value',\r\n    },\r\n    {\r\n        type: 'text',\r\n        name: 'points',\r\n        label: 'Points',\r\n        hideMobile: true,\r\n    },\r\n    {\r\n        type: 'text',\r\n        name: 'club',\r\n        label: 'Club',\r\n        hideTablet: true,\r\n    },\r\n]\r\n\r\nexport const PlayerCompareTable: React.FC<Props> = (props) => {\r\n    return(\r\n            <TableContainer \r\n                style={{minHeight:180}} \r\n                component={Paper} \r\n                className=\"Paper\" \r\n            >\r\n                <Table>\r\n                    <TableComponent \r\n                        fields={fields} \r\n                        values={props.players} \r\n                    />\r\n                </Table>\r\n            </TableContainer>\r\n    )\r\n}\r\n","import { AppBar, CircularProgress, Divider, Paper, Tab, Tabs, TextField, Typography } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid/Grid';\r\nimport Autocomplete, { AutocompleteChangeDetails, AutocompleteChangeReason, createFilterOptions } from '@material-ui/lab/Autocomplete';\r\nimport $ from \"jquery\";\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MediaQuery from 'react-responsive';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { percentageExceptionList, percentageNormalList } from '../data/scorecalc-data';\r\nimport { Player, PlayerMain } from '../services/player-service';\r\nimport tournamentsService, { PlayerPoints } from '../services/tournament-service';\r\nimport { RootState } from '../store/combineReducers';\r\nimport { PlayersCareerChart } from './charts/career-chart-wrapper';\r\nimport { PlayersYearChart } from './charts/year-chart-wrapper';\r\nimport { ErrorMessage } from './error-message';\r\nimport PlayerCard from './player-card';\r\nimport { PlayerCompareTable } from './player-compare-table';\r\n\r\ninterface Params{\r\n    id: string\r\n}\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & RouteComponentProps<Params>\r\n\r\ninterface PlayerPointsWithId extends PlayerPoints{\r\n    id: string\r\n}\r\n\r\ninterface State{\r\n\r\n    mainPlayerPoints?: PlayerPoints,\r\n    comparePlayerPoints: PlayerPointsWithId[]   \r\n    \r\n    playerUpdating: number\r\n    selectedPlayer: Player | null\r\n    selectedComparePlayers: Player[]\r\n\r\n    tabValue: number\r\n\r\n    showError: boolean\r\n}\r\n\r\nexport class ProgressComponent extends Component<Props, State>{\r\n\r\n    public readonly state:State = {\r\n        comparePlayerPoints: [],\r\n        \r\n        playerUpdating: 0,\r\n        selectedPlayer: null,\r\n        selectedComparePlayers: [],\r\n        tabValue: 0,\r\n\r\n        showError: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.match.params.id !== undefined && this.props.players.length){\r\n            this.handlePlayerChange(undefined, this.getPlayerValue())\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Props){\r\n        if(prevProps.players.length !== this.props.players.length && this.props.match.params.id !== undefined ||\r\n           prevProps.match.params.id !== this.props.match.params.id && this.props.players.length){\r\n            this.handlePlayerChange(undefined, this.getPlayerValue())\r\n        }\r\n    }\r\n\r\n\r\n    getPlayerValue(): Player | null{\r\n        let player = this.props.players.find(player => player.id === this.props.match.params.id)\r\n        if(player === undefined){\r\n            return null\r\n        }\r\n\r\n        return player\r\n    }\r\n\r\n    getPlayerPointsArray(): PlayerPoints[]{\r\n        if(this.state.mainPlayerPoints !== undefined ){\r\n            return [ this.state.mainPlayerPoints ].concat(this.state.comparePlayerPoints)\r\n        }\r\n        return []\r\n    }\r\n    \r\n\r\n    render(): React.ReactNode{\r\n        return(\r\n            <>\r\n            {(this.props.match.params.id !== undefined && this.props.players.length === 0) \r\n            ? \r\n            <div style={{\r\n                height:'calc(100vh - 100px)',\r\n                display:'flex', \r\n                justifyContent:\"center\", \r\n                alignItems:'center'}}\r\n            >\r\n                <CircularProgress style = {{alignSelf:'center'}}/>\r\n            </div>\r\n            :\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={5} md={4}>\r\n                        <Grid container spacing={3}>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Autocomplete\r\n                                blurOnSelect\r\n                                options = {this.props.players}\r\n                                getOptionLabel = {(option) => option.name}\r\n                                value = {this.state.selectedPlayer}\r\n                                renderInput = {(params) => \r\n                                    <TextField {...params} label=\"Select a player\" variant = \"outlined\" />\r\n                                }\r\n                                filterOptions = {createFilterOptions({\r\n                                    limit: 100\r\n                                })}\r\n                                onChange = {this.handleValueChange}\r\n                                loading = {this.props.players.length === 0}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Autocomplete\r\n                                multiple\r\n                                blurOnSelect\r\n                                options = {this.props.players}\r\n                                getOptionLabel = {(option) => option.name}\r\n                                renderInput = {(params) => \r\n                                    <TextField {...params} label=\"Select players to compare\" />\r\n                                }\r\n                                filterOptions = {createFilterOptions({\r\n                                    limit: 100\r\n                                })}\r\n                                onChange = {this.handlePlayerCompareChange}\r\n                                loading = {this.props.players.length === 0}\r\n                            />\r\n                        </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs sm md>\r\n                        <PlayerCard player={this.state.selectedPlayer}/>\r\n                    </Grid>\r\n                    <Grid xs={12} style={{marginTop:'18px'}}>\r\n                        <div style={{ marginLeft:'8px', marginRight:'8px',}}>\r\n                            <PlayerCompareTable players={this.state.selectedPlayer ? [{...this.state.selectedPlayer, isMain: true}, ...this.state.selectedComparePlayers]:this.state.selectedComparePlayers}/>\r\n                        </div>\r\n                    </Grid>\r\n                    <Paper className=\"Paper\" style={{width:'100%', marginTop:'24px', marginBottom:'24px', marginLeft:'8px', marginRight:'8px', overflow:'hidden', }}>\r\n                    <Grid item xs = {12}>\r\n                    \r\n                        <AppBar position=\"static\" color=\"transparent\" style={{marginBottom:'18px', boxShadow: '0 0px 3px 0px rgb(150, 150, 150)'}}>\r\n                        <Tabs\r\n                            value = {this.state.tabValue}\r\n                            onChange = {(event: any, newValue:number) => {this.setState({tabValue:newValue})}}\r\n                            centered\r\n                            indicatorColor='primary'\r\n                        >\r\n                            <Tab label=\"Career Chart\"/>\r\n                            <Tab label=\"Date Chart\"/>\r\n                        </Tabs>\r\n                        </AppBar>\r\n                        <MediaQuery maxWidth={599}>\r\n                        {(isMobile) =>\r\n                        <div style={{position: \"relative\", padding:isMobile?'6px': '10px'}}>\r\n                            {\r\n                                <div style={(this.state.playerUpdating || this.state.mainPlayerPoints === undefined) ? {filter:\"blur(5px)\", pointerEvents:'none'} : undefined }>\r\n                                    \r\n                                    {this.state.tabValue === 1 ?\r\n                                        <PlayersYearChart \r\n                                            playerPointsArray = {this.getPlayerPointsArray()}\r\n                                        />\r\n                                        :\r\n                                        <PlayersCareerChart \r\n                                            playerPointsArray = {this.getPlayerPointsArray()}\r\n                                        />\r\n                                    }\r\n                                </div>\r\n                            }\r\n                            {\r\n                                (this.state.playerUpdating || this.state.mainPlayerPoints === undefined) && \r\n                                <div style={{\r\n                                    position:\"absolute\", \r\n                                    width:\"100%\", \r\n                                    height:isMobile?\"400px\":\"500px\", \r\n                                    top:0, \r\n                                    left:0, \r\n                                    display:'flex', \r\n                                    justifyContent:\"center\", \r\n                                    alignItems:'center'\r\n                                }}>\r\n                                    {this.state.playerUpdating && this.state.selectedPlayer !== null ?\r\n\r\n                                        <CircularProgress  />\r\n                                        :\r\n                                        <Typography>\r\n                                            Select a player to load chart\r\n                                        </Typography>\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        }\r\n                        </MediaQuery>\r\n                    </Grid>\r\n                    </Paper>\r\n\r\n                </Grid>}\r\n                <ErrorMessage show={this.state.showError}/>\r\n                </>\r\n        )\r\n\r\n    }\r\n\r\n    \r\n    private readonly handleValueChange = (event: any, newValue: Player|null) => {\r\n        if(newValue === null){\r\n            this.props.history.push(`/players`)\r\n        }\r\n        else{\r\n            this.props.history.push(`/players/${newValue.id}`)\r\n        }\r\n    }\r\n    private readonly handlePlayerChange = (event: any, newValue: Player|null) =>{\r\n        this.setState({selectedPlayer: newValue})\r\n        this.getPlayerPoints(newValue).then((value) => {\r\n            if(this.state.selectedPlayer?.id === newValue?.id){\r\n                this.setState({\r\n                    mainPlayerPoints: value\r\n                })                \r\n            }\r\n\r\n            \r\n        })\r\n    }\r\n    private readonly handlePlayerCompareChange = (\r\n        event: any, \r\n        newValue: Player[], \r\n        reason: AutocompleteChangeReason, \r\n        details: AutocompleteChangeDetails<Player> | undefined\r\n    ) =>{\r\n        //this.setState({playerName2: newValue?.name})\r\n        if(reason === \"clear\"){\r\n            this.setState({\r\n                comparePlayerPoints: [],\r\n                selectedComparePlayers: []\r\n            })\r\n        }\r\n        else if(details !== undefined){\r\n            if(reason === \"remove-option\"){\r\n                this.setState((prevState) => ({\r\n                    comparePlayerPoints: prevState.comparePlayerPoints.filter(player => player.id !== details.option.id),\r\n                    selectedComparePlayers: prevState.selectedComparePlayers.filter(player => player.id !== details.option.id)\r\n                }))\r\n            }\r\n            else if(reason === \"select-option\"){\r\n                this.setState((prevState) => ({\r\n                    selectedComparePlayers: prevState.selectedComparePlayers.concat(details.option)\r\n                }))\r\n                this.getPlayerPoints(details.option).then((value) => {\r\n                    if(value!==undefined && this.state.selectedComparePlayers.some(player => player.id === details.option.id)){\r\n                        const valToAdd: PlayerPointsWithId = {\r\n                            ...value,\r\n                            id: details.option.id\r\n                        }\r\n\r\n                        this.setState((prevState) => ({\r\n                            comparePlayerPoints: prevState.comparePlayerPoints.concat(valToAdd)\r\n                        }))\r\n                    }\r\n\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private readonly getPlayerPoints = (newValue: Player|null): Promise<PlayerPoints | undefined> =>{\r\n        var promise = new Promise<PlayerPoints | undefined>((resolve, reject) => {\r\n            if(newValue === null){\r\n                resolve(undefined)\r\n            }\r\n            else{\r\n                this.setState((prevState) => ({playerUpdating: prevState.playerUpdating+1}))\r\n                $.getJSON('https://europe-west3-thranker.cloudfunctions.net/tournaments?playerId='+newValue.id)\r\n                .then(res => {\r\n                    resolve({\r\n                        pointsNormal: tournamentsService.getPointsByDate(res, percentageNormalList),\r\n                        pointsException: tournamentsService.getPointsByDate(res, percentageExceptionList),\r\n                        playerName:newValue.name\r\n                    })\r\n                })\r\n                .catch(() => {\r\n                    this.setState({showError: true})\r\n                    resolve(undefined)\r\n                })\r\n                .always(() => {\r\n                    this.setState((prevState) => ({playerUpdating: prevState.playerUpdating-1}))\r\n                })\r\n            }\r\n\r\n        })\r\n        return promise\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) =>({\r\n    players: state.players.players\r\n});\r\n\r\nconst Progress = connect(mapStateToProps)(ProgressComponent)\r\nexport { Progress };\r\n\r\n","import { Box, Checkbox, IconButton, InputAdornment, List, ListItem, ListItemSecondaryAction, ListItemText } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Clear, Search } from '@material-ui/icons';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport React, { Component } from 'react';\r\nimport { Player } from '../services/player-service';\r\nimport { SearchField } from './search-field';\r\n//import matchSorter from 'match-sorter'\r\n\r\ninterface OwnProps{\r\n    players: Player[]\r\n    handlePlayerToggle: (player: Player) => void\r\n    playersCompare: Player[]\r\n}\r\ninterface State{\r\n    searchText: string\r\n}\r\n\r\ntype Props = OwnProps\r\n\r\n\r\nexport class PlayersAutoComplete extends Component<Props, State>{\r\n    public readonly state: State = {\r\n        searchText: ''\r\n    }\r\n    render(): React.ReactNode{\r\n\r\n        return(\r\n\r\n            <>\r\n                \r\n                <SearchField\r\n                    label=\"Players\"\r\n                    searchText={this.state.searchText}\r\n                    onChange={this.handleSearchChange}\r\n                />\r\n                <List dense>\r\n                    {(!this.props.players.length ? Array.from(new Array(10)) : \r\n                        this.props.players.filter(p => p.name.toLowerCase().includes(this.state.searchText.toLowerCase())).slice(0, 10))\r\n                        .map((player) => {\r\n                            return (\r\n                                player ? (\r\n                                    <ListItem key={player.id} button onClick={() => this.props.handlePlayerToggle(player)}>\r\n                                        <ListItemText id={player.id+player.name} primary={player.name} secondary={player.club} />\r\n                                        <ListItemSecondaryAction>\r\n                                            <Checkbox\r\n                                                edge=\"end\"\r\n                                                onChange={() => this.props.handlePlayerToggle(player)}\r\n                                                checked={this.props.playersCompare.some(p => p.id===player.id)}\r\n                                            />\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                ) : (\r\n                                    <Box pt={2} pl={1} pr={1}>\r\n                                        <Skeleton />\r\n                                        <Skeleton width=\"60%\" />\r\n                                    </Box>\r\n                                )\r\n                            )\r\n                        })}\r\n                </List>\r\n            </>\r\n        )\r\n    }\r\n    private readonly handleSearchChange = (text: string): void => {\r\n        this.setState({searchText: text});\r\n    }\r\n}","import { Box, Grid, IconButton, List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { Remove } from \"@material-ui/icons\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport CSS from 'csstype';\r\nimport React, { Component } from \"react\";\r\nimport MediaQuery, { useMediaQuery } from 'react-responsive';\r\nimport { SortableContainer, SortableElement } from \"react-sortable-hoc\";\r\nimport { PlayerRanked } from \"../services/player-service\";\r\nimport styles from './styles/playerlist.module.css';\r\n\r\nconst listItemStyle: CSS.Properties = {\r\n    boxShadow: '0 1.5px 4px rgba(0, 0, 0, 0.2)',\r\n    backgroundColor: 'rgb(255, 255, 255)',\r\n    marginTop: '10px',\r\n    marginBottom: '10px',\r\n    borderRadius: '7px'\r\n}\r\n\r\nconst mobileListItemStyle: CSS.Properties = {\r\n    ...listItemStyle,\r\n    paddingRight: '5px',\r\n    paddingLeft: '10px'\r\n}\r\n\r\nconst ratingUpStyle: CSS.Properties = {\r\n    fontWeight: 600,\r\n    color: '#5eb560'\r\n}\r\nconst ratingDownStyle: CSS.Properties = {\r\n    fontWeight: 600,\r\n    color: '#f97373'\r\n}\r\nconst ratingConstantStyle: CSS.Properties = {\r\n    fontWeight: 600,\r\n    color: '#969696'\r\n}\r\n\r\nconst tabletMaxWidth = 800\r\n\r\nconst SortableItem = SortableElement(({children}:any) => { \r\n    const isTabletOrMobile = useMediaQuery({ maxWidth: tabletMaxWidth })\r\n    return(\r\n        <ListItem \r\n            \r\n            style={isTabletOrMobile ? mobileListItemStyle : listItemStyle}\r\n            onMouseEnter={ (): void => { if (document.body.style.cursor !== 'grabbing') document.body.style.cursor = 'grab' } }\r\n            onMouseLeave={ (): void => { if (document.body.style.cursor === 'grab') document.body.style.cursor = '' } }\r\n        >\r\n            {children}\r\n        </ListItem>\r\n        )\r\n    });\r\n    \r\nconst SortableList = SortableContainer(({children}:any) => {\r\n    const isTabletOrMobile = useMediaQuery({ maxWidth: tabletMaxWidth })\r\n    return <List dense={isTabletOrMobile} style={{paddingTop:0}}>{children}</List>;\r\n});\r\nconst ResponsiveListItem = ({children}:any) => {\r\n    const isTabletOrMobile = useMediaQuery({ maxWidth: tabletMaxWidth })\r\n    return <ListItem style={isTabletOrMobile ? {paddingRight:'5px', paddingLeft:'10px'}:undefined}>{children}</ListItem>\r\n}\r\n\r\n\r\ninterface OwnProps{\r\n    playersCompare: PlayerRanked[] \r\n    reorder: ({oldIndex, newIndex}: any) => void\r\n    playerRemoved: (playerId: string) => void\r\n}\r\n\r\ntype Props = OwnProps\r\n\r\n\r\nexport class RankedPlayersList extends Component<Props, {}>{\r\n    \r\n    render(): React.ReactNode{\r\n        return(\r\n            <MediaQuery maxWidth={599}>\r\n            {(isMobile) => \r\n            <SortableList \r\n                onSortStart={() => (document.body.style.cursor = 'grabbing')}\r\n                onSortEnd={({oldIndex, newIndex}: any) => {\r\n                    document.body.style.cursor = 'default'\r\n                    this.props.reorder({oldIndex, newIndex})\r\n                }} \r\n                shouldCancelStart = {(e: any) => {\r\n                    if(\r\n                        e.target.id === \"buttonRemove\" || \r\n                        e.target.nearestViewportElement !== undefined && \r\n                        e.target.nearestViewportElement.id === \"buttonRemove\"\r\n                    ){\r\n                        return true\r\n                    }\r\n                }} \r\n                useWindowAsScrollContainer\r\n                lockAxis = 'y'\r\n                pressDelay = {isMobile ? 200 : 0}\r\n                helperClass = {styles.selected}\r\n            >\r\n                <ResponsiveListItem>\r\n                    <Grid item xs = {1}>\r\n                        <ListItemText >#</ListItemText>\r\n                    </Grid>\r\n                    <Grid item xs={3} sm={4}>\r\n                        <ListItemText>Name</ListItemText>\r\n\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                        <ListItemText>Rank</ListItemText>\r\n\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                        <ListItemText >Points</ListItemText>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={2} sm={2} md={2} style={{minWidth: '65px'}}>  \r\n                        <ListItemText style={{textAlign:'right', float:'right'}}>Tournament Points</ListItemText>\r\n                    </Grid>\r\n                </ResponsiveListItem>\r\n                {this.props.playersCompare.map((value, index) => (\r\n                <SortableItem  key={index} index={index} >\r\n                    <Grid item xs = {1}>\r\n                    <ListItemText><b>{value.pos}</b></ListItemText>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={3} sm={4}>\r\n                        <ListItemText style={{marginRight:5}}>{value.name}</ListItemText>\r\n\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                        {\r\n                            value.lowestScore===-1 ? <Skeleton width={65}/> :(\r\n                            <Grid container direction='row' >\r\n                                <Box mr={0.5}><ListItemText>{value.newRank}</ListItemText></Box>\r\n                                {\r\n                                    value.rank > value.newRank ? <ListItemText style={ratingUpStyle}><b>{`(+${Math.abs(value.rank-value.newRank)})`}</b></ListItemText>:\r\n                                    value.rank === value.newRank ? <ListItemText style={ratingConstantStyle}><b>{`(=${value.rank-value.newRank})`}</b></ListItemText> :\r\n                                    <ListItemText style={ratingDownStyle}><b>{`(-${Math.abs(value.rank-value.newRank)})`}</b></ListItemText>\r\n                                } \r\n                            </Grid>\r\n                            )\r\n                        }\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item xs>\r\n                        {\r\n                            value.lowestScore===-1 ? <Skeleton width={65}/> :(\r\n                                <Grid container direction='row' >\r\n                                    <Box mr={0.5}><ListItemText >{value.newPoints}</ListItemText></Box>\r\n                                    {\r\n                                        value.points < value.newPoints ? <ListItemText style={ratingUpStyle}><b>{`(+${Math.abs(value.points-value.newPoints)})`}</b></ListItemText>:\r\n                                        <ListItemText style={ratingConstantStyle}><b> {`(=${value.points-value.newPoints})`}</b></ListItemText> \r\n                                    } \r\n                                </Grid>\r\n                                )\r\n                        }\r\n                        \r\n\r\n                    </Grid>\r\n                      <Grid item xs={2} sm={2}  style={{minWidth: '65px'}}>  \r\n                         <Grid container direction='row' justify='flex-end' > \r\n                            <MediaQuery maxWidth={tabletMaxWidth}>\r\n                                {(matches) => \r\n                                    <>\r\n                                        <Box  display=\"flex\" alignItems=\"center\" justifyContent=\"flex-end\" marginRight={matches?'2px':2} >\r\n                                            <ListItemText  ><b>{value.score}</b></ListItemText>\r\n                                        </Box>\r\n                                        <IconButton size='small' onClick = {() => this.props.playerRemoved(value.id)} id=\"buttonRemove\">\r\n                                            <Remove fontSize={matches ? 'small' : undefined} id=\"buttonRemove\"/>\r\n                                        </IconButton>\r\n                                    </>\r\n                                    \r\n                                }\r\n                            </MediaQuery>\r\n                         </Grid> \r\n                     </Grid> \r\n                </SortableItem>\r\n                ))}\r\n            </SortableList>\r\n            }\r\n            </MediaQuery>\r\n        )\r\n    }\r\n\r\n}","import { BottomNavigation, BottomNavigationAction, Box, Button, FormControl, Grid, InputLabel, MenuItem, Select, Typography } from '@material-ui/core';\r\nimport { ClearAll, GroupAdd, List as ListIcon } from '@material-ui/icons';\r\nimport arrayMove from 'array-move';\r\nimport $ from \"jquery\";\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MediaQuery from 'react-responsive';\r\nimport { RouteComponentProps, StaticContext } from 'react-router';\r\nimport { AnyAction, Dispatch } from 'redux';\r\nimport { Level, levelList } from '../data/scorecalc-data';\r\nimport playersService, { Player, PlayerRanked } from '../services/player-service';\r\nimport { RootState } from '../store/combineReducers';\r\nimport { updateRankerState } from '../store/ranker/ranker-actions';\r\nimport { RankerState } from '../store/ranker/ranker-types';\r\nimport { ErrorMessage } from './error-message';\r\nimport { PlayersAutoComplete } from './players-autocomplete';\r\nimport { RankedPlayersList } from './rankedplayers-list';\r\n\r\n\r\n\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps> & RouteComponentProps<{}, StaticContext, {addPlayer?: Player}>\r\n\r\ninterface State{\r\n    showError: boolean\r\n}\r\n\r\nexport class RankerComponent extends Component<Props, {}>{ \r\n    public readonly state: State = {\r\n        showError: false\r\n    }\r\n\r\n    private readonly recalc = (players: PlayerRanked[], levelName: string): PlayerRanked[] => {\r\n        let levelFound = levelList.find(level => level.name===levelName)\r\n        let level:Level = levelFound ? levelFound : levelList[0]\r\n        return playersService.rankPlayers(playersService.recalc(players, level), this.props.prefScores);\r\n    }\r\n\r\n    private readonly reorder = ({oldIndex, newIndex}: any): void => {\r\n        this.props.updateRankerState({\r\n            ...this.props.rankerState, \r\n            playersCompare: this.recalc(arrayMove(this.props.rankerState.playersCompare, oldIndex, newIndex), this.props.rankerState.selectedLevel)\r\n        })\r\n      };\r\n\r\n    componentDidMount():void {\r\n        if(this.props.location.state!==undefined && this.props.location.state!==null &&this.props.location.state.addPlayer !== undefined){\r\n            this.handlePlayerToggle(this.props.location.state.addPlayer, true)\r\n        }\r\n    }\r\n\r\n    render(): React.ReactNode{\r\n        return(\r\n            <>\r\n                <MediaQuery maxWidth={599}>\r\n                {(isMobile) => \r\n                <Box pb={isMobile ? 6 : 2}>\r\n                    <Grid container spacing={3}>\r\n                            <>\r\n                            {(!isMobile || this.props.rankerState.bottomNavVal === 0) &&\r\n                            <Grid item xs={12}  sm={3} style={{minWidth:'200px'}}>\r\n                                <PlayersAutoComplete\r\n                                    players = {this.props.players}\r\n                                    handlePlayerToggle = {this.handlePlayerToggle}\r\n                                    playersCompare = {this.props.rankerState.playersCompare}\r\n                                />\r\n                            </Grid>\r\n                            }\r\n                        \r\n                            {(!isMobile || this.props.rankerState.bottomNavVal === 1) &&\r\n                                <Grid item xs={12} sm>\r\n                                    <Grid container justify='space-between' alignItems='center'>\r\n                                        <Grid item>\r\n                                        <FormControl>\r\n                                            <InputLabel>Level</InputLabel>\r\n                                            <Select\r\n                                                value={this.props.rankerState.selectedLevel}\r\n                                                onChange={this.handleLevelChange}\r\n                                            >\r\n                                                {levelList.map(level => <MenuItem value={level.name}>{level.name}</MenuItem> )}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            startIcon={<ClearAll />}\r\n                                            onClick={this.handleClearAllClick}\r\n                                            style={{float:'right'}}\r\n                                        >\r\n                                            Clear\r\n                                        </Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Typography align='right' variant='body2'style={{marginTop:20, marginRight:3}} color=\"textSecondary\">\r\n                                        <i>{isMobile ? \"*Hold and drag to reorder\" :\r\n                                            \"*Drag to reorder\"}</i>\r\n                                    </Typography>\r\n                                    <RankedPlayersList\r\n                                        playersCompare = {this.props.rankerState.playersCompare}\r\n                                        reorder = {this.reorder}\r\n                                        playerRemoved = {this.playerRemoved}\r\n                                    />\r\n                                    {this.props.rankerState.playersCompare.length < 4 &&\r\n                                    <div style={{textAlign:'center', fontSize:'14px', fontFamily: 'Arial', color:'#1976d2'}}>\r\n                                        <span >\r\n                                            {`Add`}\r\n                                        </span>\r\n                                        <span style={{marginLeft:4, marginRight:4,color:'#dc004e', fontWeight:600}}>\r\n                                            {4-this.props.rankerState.playersCompare.length}\r\n                                        </span>\r\n                                        <span  >\r\n                                            {`more player${this.props.rankerState.playersCompare.length<3 ? 's':''} to make this tournament rated`}\r\n                                        </span>\r\n                                    </div>\r\n                                    }\r\n                                </Grid>\r\n                            \r\n                            }\r\n                            \r\n                        </>\r\n                    </Grid>\r\n                </Box>\r\n                }\r\n            \r\n                </MediaQuery>\r\n            <MediaQuery maxWidth={599}>\r\n                <BottomNavigation\r\n                    value = {this.props.rankerState.bottomNavVal}\r\n                    onChange={(e, newValue) => {\r\n                        this.props.updateRankerState({\r\n                            ...this.props.rankerState,\r\n                            bottomNavVal: newValue\r\n                        })\r\n                    }}\r\n                    style = {{\r\n                        width:'100%',\r\n                        position: 'fixed',\r\n                        bottom: '0',\r\n                        //right:'0',\r\n                        left:'0',\r\n                        boxShadow: '0 0px 3px 0px rgb(150, 150, 150)',\r\n                        zIndex: 99999\r\n                    }}\r\n                    showLabels\r\n                >\r\n                    <BottomNavigationAction label=\"Select Players\" style={{maxWidth:'1000px'}} icon={<GroupAdd/>}/>\r\n                    <BottomNavigationAction label=\"Standings\" style={{maxWidth:\"1000px\"}} icon={<ListIcon/>}/>\r\n                </BottomNavigation>\r\n            </MediaQuery>\r\n            <ErrorMessage show={this.state.showError}/>\r\n            </>\r\n        )\r\n    }\r\n\r\n    public readonly handlePlayerToggle = (player: Player, forceAdd?: boolean): void => {\r\n        if(this.props.rankerState.playersCompare.some(p => p.id===player.id)){\r\n            \r\n            \r\n            if(forceAdd!==true){\r\n                this.playerRemoved(player.id)\r\n            }\r\n            \r\n        }\r\n        else{\r\n            this.playerAdded(player);\r\n        }\r\n    }\r\n    private readonly playerAdded = (player: Player): void => {\r\n        \r\n        this.props.updateRankerState({\r\n            ...this.props.rankerState,\r\n            playersCompare: this.recalc(this.props.rankerState.playersCompare.concat({\r\n                ...player, \r\n                pos:this.props.rankerState.playersCompare.length+1, \r\n                score:-1, \r\n                lowestScore:-1,\r\n                newRank:-1,\r\n                newPoints:-1\r\n            }), this.props.rankerState.selectedLevel)\r\n        })\r\n        $.ajax('https://europe-west3-thranker.cloudfunctions.net/single?playerId='+player.id)\r\n        .then(res => {\r\n            \r\n            let score = Number(res);\r\n            let items = [...this.props.rankerState.playersCompare]\r\n            for(var i=0; i<items.length; i++){\r\n                if(items[i].id === player.id && items[i].lowestScore===-1){\r\n                    let item = {...items[i]}\r\n                    item.lowestScore=score\r\n                    \r\n                    items[i]=item\r\n                    this.props.updateRankerState({\r\n                        ...this.props.rankerState,\r\n                        playersCompare: this.recalc(items, this.props.rankerState.selectedLevel)\r\n                    })\r\n\r\n                    break\r\n                }\r\n            }\r\n        \r\n        })\r\n        .catch(() => {\r\n            this.setState({showError: true})\r\n        })\r\n\r\n    }\r\n    private readonly handleClearAllClick = (): void => {\r\n        this.props.updateRankerState({\r\n            ...this.props.rankerState,\r\n            playersCompare: []\r\n        })\r\n    }\r\n    private readonly playerRemoved = (playerId: string): void => {\r\n        this.props.updateRankerState({\r\n            ...this.props.rankerState,\r\n            playersCompare: this.recalc(this.props.rankerState.playersCompare.filter(player => player.id !== playerId), this.props.rankerState.selectedLevel)\r\n        })\r\n    }\r\n    private readonly handleLevelChange = (e: any): void => {\r\n        this.props.updateRankerState({\r\n            ...this.props.rankerState,\r\n            selectedLevel: e.target.value,\r\n            playersCompare: this.recalc(this.props.rankerState.playersCompare, e.target.value)\r\n        })\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) =>({\r\n    players: state.players.players,\r\n    prefScores: state.players.prefScores,\r\n    rankerState: state.ranker\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) =>({\r\n    updateRankerState: (rankerState: RankerState) => dispatch(updateRankerState(rankerState))\r\n});\r\n  \r\n\r\nconst Ranker = connect(mapStateToProps, mapDispatchToProps)(RankerComponent)\r\nexport { Ranker };\r\n\r\n","import { RankerActionTypes, RankerState, UPDATE_RANKER_STATE } from \"./ranker-types\";\r\n\r\nexport function updateRankerState(rankerState: RankerState): RankerActionTypes{\r\n    return{\r\n        type: UPDATE_RANKER_STATE,\r\n        payload: rankerState\r\n    }\r\n}","import { PlayerRanked } from \"../../services/player-service\";\r\n\r\nexport const UPDATE_RANKER_STATE = 'UPDATE_RANKER_STATE'\r\n\r\nexport interface RankerState {\r\n    playersCompare: PlayerRanked[] \r\n    selectedLevel: string,\r\n    bottomNavVal: number\r\n}\r\n\r\ninterface UpdateRankerStateAction {\r\n    type: typeof UPDATE_RANKER_STATE\r\n    payload: RankerState\r\n}\r\n\r\nexport type RankerActionTypes = \r\n    | UpdateRankerStateAction","import { Container } from \"@material-ui/core\";\r\nimport $ from \"jquery\";\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route } from 'react-router';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { AnyAction, Dispatch } from 'redux';\r\nimport './App.css';\r\nimport { ErrorMessage } from \"./components/error-message\";\r\nimport { Home } from './components/home';\r\nimport { NavBar } from './components/navbar';\r\nimport { PlayerTable } from \"./components/player-table\";\r\nimport { Progress } from './components/progress';\r\nimport { Ranker } from './components/ranker';\r\nimport playersService, { Player } from './services/player-service';\r\nimport { updatePlayersState } from './store/players/player-actions';\r\nimport { PlayersState } from './store/players/player-types';\r\n\r\ntype Props = ReturnType<typeof mapDispatchToProps> \r\n\r\ninterface State{\r\n  showError: boolean\r\n}\r\n\r\nclass AppComponent extends Component<Props, State> {\r\n  public readonly state: State = {\r\n    showError: false\r\n  }\r\n  componentDidMount(): void{\r\n    $.ajax('https://europe-west3-thranker.cloudfunctions.net/all')\r\n      .then(res => {\r\n          const players:Player[] =  playersService.parseContent(res)\r\n          const prefScores:number[] = playersService.getPlayerScores(players)\r\n          this.props.updatePlayersState({\r\n            prefScores,\r\n            players: playersService.fixPlayers(players, prefScores)\r\n          })\r\n      })\r\n      .catch(() => {\r\n          this.setState({showError: true})\r\n      })\r\n  }\r\n  \r\n  static displayName = AppComponent.name;\r\n  \r\n  render () {\r\n    return (\r\n      <HashRouter>\r\n        <NavBar>\r\n          <Container style={{padding: 0}}>\r\n            <Route exact path='/' component={Home} />\r\n            <Route exact path='/ranker' component={Ranker} />\r\n            <Route exact path= '/players/:id?' component={Progress} />\r\n          </Container>\r\n          <Container style={{padding: 0, maxWidth: 1600}}>\r\n            <Route path='/table/:page/:rowsPerPage' component={PlayerTable} />\r\n          </Container>\r\n        </NavBar>\r\n        <ErrorMessage show={this.state.showError}/>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) =>({\r\n  updatePlayersState: (playersState: PlayersState) => dispatch(updatePlayersState(playersState))\r\n});\r\n\r\nconst App = connect(null, mapDispatchToProps)(AppComponent)\r\nexport default App","import { Player } from \"../../services/player-service\";\r\nimport { PlayersActionTypes, PlayersState, UPDATE_PLAYERS, UPDATE_PLAYERS_STATE } from \"./player-types\";\r\n\r\nexport function updatePlayers(newPlayers: Player[]): PlayersActionTypes{\r\n    return {\r\n        type: UPDATE_PLAYERS,\r\n        payload: newPlayers\r\n    }\r\n}\r\nexport function updatePlayersState(playersState: PlayersState): PlayersActionTypes{\r\n    return {\r\n        type: UPDATE_PLAYERS_STATE,\r\n        payload: playersState\r\n    }\r\n}","import { Player } from \"../../services/player-service\";\r\n\r\nexport const UPDATE_PLAYERS = 'UPDATE_PLAYERS'\r\nexport const UPDATE_PLAYERS_STATE = 'UPDATE_PLAYERS_STATE'\r\n\r\nexport interface PlayersState {\r\n    players: Player[],\r\n    prefScores: number[]\r\n}\r\n\r\ninterface UpdatePlayersStateAction {\r\n    type: typeof UPDATE_PLAYERS_STATE\r\n    payload: PlayersState\r\n}\r\n\r\ninterface UpdatePlayersAction {\r\n    type: typeof UPDATE_PLAYERS\r\n    payload: Player[]\r\n}\r\n\r\nexport type PlayersActionTypes = \r\n    | UpdatePlayersStateAction\r\n    | UpdatePlayersAction","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { PlayersActionTypes, PlayersState, UPDATE_PLAYERS, UPDATE_PLAYERS_STATE } from \"./player-types\";\r\n\r\nconst initialState: PlayersState = {\r\n    players: [],\r\n    prefScores: []\r\n}\r\n\r\nexport function playersReducer(\r\n    state = initialState,\r\n    action: PlayersActionTypes\r\n\r\n): PlayersState {\r\n    switch(action.type){\r\n        case UPDATE_PLAYERS:\r\n            return{\r\n                ...state,\r\n                players: action.payload\r\n            }\r\n        case UPDATE_PLAYERS_STATE:\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}","import { levelList } from \"../../data/scorecalc-data\";\r\nimport { RankerActionTypes, RankerState, UPDATE_RANKER_STATE } from \"./ranker-types\";\r\n\r\nconst initialState: RankerState = {\r\n    playersCompare: [],\r\n    selectedLevel: levelList[0].name,\r\n    bottomNavVal: 1\r\n}\r\n\r\nexport function rankerReducer(\r\n    state = initialState,\r\n    action: RankerActionTypes\r\n\r\n): RankerState {\r\n    switch(action.type){\r\n        case UPDATE_RANKER_STATE:\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { playersReducer } from \"./players/player-reducers\";\r\nimport { rankerReducer } from \"./ranker/ranker-reducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n    players: playersReducer,\r\n    ranker: rankerReducer\r\n})\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\nexport default rootReducer;\r\n","import store from './createStore';\r\n\r\nexport default store;","import { createStore } from 'redux';\r\nimport reducer from './combineReducers';\r\n\r\nexport default createStore(reducer);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}